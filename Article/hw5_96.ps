%!PS-Adobe-2.0
%%Creator: dvipsk 5.58f Copyright 1986, 1994 Radical Eye Software
%%Title: assign.dvi
%%Pages: 8
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%EndComments
%DVIPSCommandLine: dvips assign.dvi -o assign.ps
%DVIPSParameters: dpi=300, compressed, comments removed
%DVIPSSource:  TeX output 1996.04.09:0110
%%BeginProcSet: texc.pro
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR[matrix currentmatrix{dup dup round sub abs 0.00001 lt{round}if}
forall round exch round exch]setmatrix}N /@landscape{/isls true N}B
/@manualfeed{statusdict /manualfeed true put}B /@copies{/#copies X}B
/FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{
/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N
string /base X array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N
end dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{
/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]
N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data dup
length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{
128 ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub
get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data
dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N
/rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup
/base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx
0 ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff
setcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff
.1 sub]/id ch-image N /rw ch-width 7 add 8 idiv string N /rc 0 N /gp 0 N
/cp 0 N{rc 0 ne{rc 1 sub /rc X rw}{G}ifelse}imagemask restore}B /G{{id
gp get /gp gp 1 add N dup 18 mod S 18 idiv pl S get exec}loop}B /adv{cp
add /cp X}B /chg{rw cp id gp 4 index getinterval putinterval dup gp add
/gp X adv}B /nd{/cp 0 N rw exit}B /lsh{rw cp 2 copy get dup 0 eq{pop 1}{
dup 255 eq{pop 254}{dup dup add 255 and S 1 and or}ifelse}ifelse put 1
adv}B /rsh{rw cp 2 copy get dup 0 eq{pop 128}{dup 255 eq{pop 127}{dup 2
idiv S 128 and or}ifelse}ifelse put 1 adv}B /clr{rw cp 2 index string
putinterval adv}B /set{rw cp fillstr 0 4 index getinterval putinterval
adv}B /fillstr 18 string 0 1 17{2 copy 255 put pop}for N /pl[{adv 1 chg}
{adv 1 chg nd}{1 add chg}{1 add chg nd}{adv lsh}{adv lsh nd}{adv rsh}{
adv rsh nd}{1 add adv}{/rc X nd}{1 add set}{1 add clr}{adv 2 chg}{adv 2
chg nd}{pop nd}]dup{bind pop}forall N /D{/cc X dup type /stringtype ne{]
}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore userdict
/eop-hook known{eop-hook}if showpage}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale rulex ruley false
RMat{BDot}imagemask grestore}}{{gsave TR -.1 .1 TR rulex ruley scale 1 1
false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave newpath transform
round exch round exch itransform moveto rulex 0 rlineto 0 ruley neg
rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N /tail
{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}
B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{
4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{
p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p
a}B /bos{/SS save N}B /eos{SS restore}B end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end
%%EndProcSet
TeXDict begin 40258431 52099146 1000 300 300 (assign.dvi)
@start /Fa 1 81 df<B712F0A20070C7EA0FF8007814006C1538001C151C6C150C000F
15046C15066C6C14026D14006C7E1200137013787F131C131E7F7F6D7EA291C8FC5B1306
5B5B133813305B5B120149140248C8120600061504000E150C000C151C4815384815F800
70140F007FB612F0B7FC272A7E7F2C>80 D E /Fb 1 50 df<1206120E12FE120EB1EAFF
E00B157D9412>49 D E /Fc 38 122 df<91380FF3809138383F00EC607F14C001011337
EC800E1303A35DEB0700A35D90B512F890380E0038A25DA35B5DA449485AA315C24A5A13
70A215881401EC00F04990C7FCA35BA21271EAF18090C9FC1262123C212D82A21D>13
D<127012F8A212F012E005057A840F>46 D<1403A25CA25CA25C142FA2EC4F80A21487A2
EB01071302A21304A21308131813101320A290387FFFC0EB40031380120113001202A25A
A2120C003CEB07E0B4EB3FFC1E237DA224>65 D<027F138090390380810090380E006301
38132749131F49130E485A485A48C7FC481404120E121E5A5D4891C7FCA35AA55A1520A2
5DA26C5C12704AC7FC6C130200185B001C5B00061330380381C0D800FEC8FC212479A223
>67 D<90B512F090380F003C150E81011EEB0380A2ED01C0A25B16E0A35BA449EB03C0A4
4848EB0780A216005D4848130E5D153C153848485B5DEC03804AC7FC000F131CB512F023
227DA125>I<90B6128090380F00071501A2131EA21600A25BA2140192C7FCEB7802A214
06140EEBFFFCEBF00CA33801E008A21504EC0008485AA25DA248485B15605D1401380F00
07B65A21227DA121>I<027F138090390380810090380E00630138132749131F49130E48
5A485A48C7FC481404120E121E5A5D4891C7FCA35AA4EC3FFC48EB01E0A34A5AA27E1270
4A5A7E0018130F001C131300060123C7FC380381C1D800FEC8FC212479A226>71
D<EBFFF8EB0F00A3131EA45BA45BA45BA4485AA4485AA4485AA4120FEAFFF015227DA113
>73 D<D9FF80EB07FC010FEC0F801617A20117EC2F00EB13C0164F168F0123149EED011E
A215020143495AA21508EB41E00181495A1520A21540D801015C1580ECE100A23A0200F2
01E0A214F414F8484A5A14F0A2000C13E0001EEBC007D8FF80EB7FF82E227DA12C>77
D<14FE903807838090380C00E0013813704913385B4848131C485A48C7FC48141E121E12
1C123CA25AA348143CA31578A25A15F0A2EC01E015C06C1303EC0780007014000078130E
00385B6C5B6C13E038070380D801FCC7FC1F2479A225>79 D<90B512E090380F0038151E
150E011E1307A449130FA3151E5B153C157815E09038F003C09038FFFE0001F0C7FCA248
5AA4485AA4485AA4120FEAFFF020227DA121>I<90B512C090380F0070153C151C011E13
0EA2150FA249131EA3153C4913381570EC01E0EC07809038FFFC00EBF00E80EC0380D801
E013C0A43903C00780A43907800F001501A2EC0702120F39FFF0038CC812F020237DA124
>82 D<903801F02090380E0C4090381802C0EB3001136001E0138013C01201A200031400
A291C7FCA27FEA01F813FF6C13E06D7EEB1FF8EB03FCEB007C143C80A30020131CA31418
00601338143000705B5C38C80180D8C607C7FCEA81FC1B247DA21B>I<001FB512F8391E
03C03800181418123038200780A200401410A2EB0F001280A200001400131EA45BA45BA4
5BA4485AA41203B5FC1D2277A123>I<393FFE03FF3903C000781560152048481340A448
C71280A4001EEB0100A4481302A4485BA400705B12F05C12705C5C123038380180D81802
C7FCEA0E0CEA03F0202377A124>I<39FFF001FF001FC7127815306C146015401580A2EC
0100A214025C13805C12075C5CA25CA25C0181C7FCA213C2120313C413C8A213D0A213E0
5BA25B120190C8FC202376A124>I<EBF8C0EA0185EA0705380E0380A2121C123C383807
001278A3EAF00EA31410EB1C201270133C38305C40138C380F078014157B9419>97
D<EA03C0EA1F801203A3EA0700A4120EA45A13F8EA1D0CEA1E0EEA3C06EA3807A2130F12
70A4EAE01EA3133C1338A2EA607013E0EA31C0EA1F0010237BA216>I<137EEA01C13803
0180EA0703EA0E07121C003CC7FC12381278A35AA45B12701302EA300CEA1830EA0FC011
157B9416>I<143CEB03F8EB0038A31470A414E0A4EB01C013F9EA0185EA0705380E0380
A2121C123C383807001278A3EAF00EA31410EB1C201270133C38305C40138C380F078016
237BA219>I<13F8EA0384EA0E02121C123C1238EA7804EAF018EAFFE0EAF000A25AA413
02A2EA6004EA7018EA3060EA0F800F157A9416>I<143E144714CFEB018F1486EB0380A3
EB0700A5130EEBFFF0EB0E00A35BA55BA55BA55BA45B1201A2EA718012F100F3C7FC1262
123C182D82A20F>I<EB1F18EB30B813E03801C070A2EA03801207EB00E05AA3381E01C0
A4EB0380120E1307EA060BEB1700EA01E7EA0007A2130EA3EA701CEAF0185BEA60E0EA3F
80151F7E9416>I<13C0EA01E013C0A2C7FCA8121E12231243A25AA3120EA25AA35AA213
40EA7080A3EA71001232121C0B217BA00F>105 D<13F0EA07E01200A3485AA4485AA448
C7FCEB01E0EB0210EB0470380E08F01310EB2060EB4000EA1D80001EC7FCEA1FC0EA1C70
487EA27F142038703840A3EB188012E038600F0014237DA216>107
D<EA01E0EA0FC01201A3EA0380A4EA0700A4120EA45AA45AA45AA3127112E2A412641238
0B237CA20C>I<391C0F80F8392610C10C39476066063987807807A2EB0070A2000EEBE0
0EA44848485AA3ED38202638038013401570168015303A7007003100D83003131E23157B
9428>I<38380F80384C30C0384E4060388E8070EA8F00128EA24813E0A4383801C0A3EB
03840070138814081307EB031012E0386001E016157B941B>I<137EEA01C33803818038
0701C0120E001C13E0123C12381278A338F003C0A21480130700701300130E130CEA3018
EA1870EA07C013157B9419>I<3801C1F0380262183804741C3808780CEB700EA2141EEA
00E0A43801C03CA3147838038070A2EBC0E0EBC1C038072380EB1E0090C7FCA2120EA45A
A3EAFFC0171F7F9419>I<EA1C1F38262080384741C0EA87831303EB018090C7FC120EA4
5AA45AA45A123012157B9415>114 D<13FCEA018338020080EA0401EA0C03140090C7FC
120F13F0EA07FC6C7EEA003E130F7F1270EAF006A2EAE004EA4008EA2030EA1FC011157D
9414>I<13C01201A4EA0380A4EA0700EAFFF8EA0700A2120EA45AA45AA31310EA7020A2
13401380EA3100121E0D1F7C9E10>I<001E1360002313E0EA4380EB81C01283EA8701A2
38070380120EA3381C0700A31408EB0E101218121CEB1E20EA0C263807C3C015157B941A
>I<381C0180382603C0EA47071303EA8701EA8E00A2000E13805AA338380100A31302A2
5B5B1218EA0C30EA07C012157B9416>I<001EEB60E00023EBE0F0384380E1EB81C00083
1470D887011330A23907038020120EA3391C070040A31580A2EC0100130F380C0B023806
13843803E0F81C157B9420>I<3803C1E0380462103808347038103CF0EA203814601400
C65AA45BA314203861C04012F1148038E2C100EA4462EA383C14157D9416>I<001E1330
00231370EA438014E01283EA8700A2380701C0120EA3381C0380A4EB0700A35BEA0C3EEA
03CEEA000EA25B1260EAF0381330485AEA80C0EA4380003EC7FC141F7B9418>I
E /Fd 30 123 df<137013E0EA01C01203EA078013005A120E121E121C123CA212381278
A4127012F0AE12701278A41238123CA2121C121E120E120F7E1380EA03C01201EA00E013
700C327DA413>40 D<EB0F80A2497EA2131DEB3DE013391338EB78F0A2EB7070EBF078A2
13E000017FA213C000037FA2138000077FA290B5FC481480A2380E0007001EEB03C0A248
14E01401A24814F01400A24814F81D237FA220>65 D<EAFFFEEBFF8014E038F007F0EB01
F8EB0078143CA6147814F0EB03E0B512C0140014C038F00FF0EB01F8EB0078143C141C14
1EA5143C147C14F8EB03F0B512E014C0140017237BA220>I<EB0FF0EB7FFC90B5FC3801
F01F3807C00749C7FC48C8FC121E123E123CA25AA35AA91278A37EA2123E121E7E6C6C13
80EBC0033801F00F6CB51200EB7FFCEB0FF019257DA31F>I<12F0B3B104237CA20D>73
D<00FC147E6C14FEA300F7EB01DEA3EB800300F3149EA2EBC007A200F1141EA2EBE00F00
F0130EA2EBF01EA2EB701CEB783CA2EB3838EB3C78A2EB1C70A2EB1EF0EB0EE0A2130FEB
07C0A390C7FC1F237BA22A>77 D<EAFFFEEBFF8014C038F003E0EB00F01478A2143CA614
78A214F0EB03E0B512C01480EBFE0000F0C7FCAF16237BA21F>80
D<EAFFFCEBFF8014C038F003E0EB00F014781438143CA51438147814F0EB03E0B512C014
80EBFE00EAF01E7FA2EB0780130314C0EB01E0A2EB00F0A21478A2143C141EA2140F1823
7BA21F>82 D<13FF000313C04813F0EA1F81381E0070481300A25AA5127C123C123FEA1F
C0EA0FFC6CB4FC0001138038003FC0EB07E0EB01F0130014F81478A600C013F07E38F801
E0387E07C0383FFF80000F1300EA01FC15257EA31B>I<EA07F0EA3FFC487EEA781FEA40
0F38000780A4137FEA07FF121FEA3E07127812F0A3130FEA7C1FEA7FFFEA3FF7EA1F8711
167E9517>97 D<12F0AD13F8EAF3FEB5FC38FE0F80EAF80738F003C0A2EB01E0A7130314
C0A238F80780EAFE1F38F7FF00EAF3FCEAF1F813237DA219>I<EA01FCEA07FF481380EA
1F03EA3C0148C7FCA2127012F0A61278A36C1340381F03C0EA0FFF6C13803801FC001216
7E9516>I<EB01E0ADEA03E1EA0FF9EA1FFFEA3F07EA3C03EA7801A212F0A81278130312
3CEA3E0FEA1FFDEA0FF9EA03E113237EA219>I<EA01F8EA07FE487E381F0780383C03C0
EA7801A2387000E0B5FCA300F0C7FCA312701278127C6C1340381F03C0EA0FFF6C138038
00FC0013167F9516>I<3803F078380FFFF85A383E1F00EA3C0F38780780A5383C0F00EA
3E1FEA1FFE485AEA33F00070C7FCA21278EA3FFEEBFFC06C13E04813F0EA780138F000F8
1478A4007813F0383E03E0381FFFC06C13803801FC0015217F9518>103
D<12F0ADEAF1F8EAF3FCEAF7FEEAFE1EEAF80FA212F0B010237CA219>I<12F0A41200A9
12F0B3A404237DA20B>I<12F0ADEB1F80EB3F00133E5B5BEAF1F0EAF3E0EAF7C012FFA2
7FA2EAFDF0EAF8F8EAF078137C7F131E131F7F1480EB07C012237CA218>107
D<12F0B3B104237DA20B>I<39F0F807C039F3FE1FF039F7FF3FF839FE0F707800FCEBE0
7C39F807C03CA200F01380AF1E167C9527>I<EAF1F8EAF3FCEAF7FEEAFE1EEAF80FA212
F0B010167C9519>I<EA01FCEA07FF481380381F07C0383C01E0387800F0A20070137000
F01378A6007813F0A2EA7C01383E03E0381F07C0380FFF806C1300EA01FC15167F9518>
I<EAF0F8EAF3FEB5FC38FE1F80EAF80738F003C0A214E01301A6130314C0130700F81380
EAFE1F38F7FF00EAF3FCEAF1F800F0C7FCAA13207D9519>I<EAF0E012F312F7EAFF005A
5A5AA25AAE0B167C9511>114 D<EA07F0EA1FFCEA3FFEEA3C0EEA78061300A2127C123F
13F0EA1FF8EA0FFCEA01FEEA001F130FA312C0EAF81EEAFFFEEA3FFCEA0FF010167F9513
>I<121EA6EAFFFCA3EA1E00AE1308EA1F1CEA0FFC13F8EA07C00E1C7F9B12>I<EAF00FB1
131FEAF83FEA7FFF13CFEA1F0F10167C9519>I<38F001E0A212F8387803C0A2003C1380
1307A2001E13005BA2EA0E0EEA0F1EA2EA071C139C13BCEA03B8A213F86C5AA213167F95
16>I<38F001E0A2387803C0A2127C383C0780A2121EEB0F00A2120F130E131E1207139C
1203139813B8120113F01200A25BA212015BA2485A1207007FC7FCA2127C13207F9516>
121 D<387FFFC0A338000F801400131E133E5B13785B1201485A5B485A120F48C7FC121E
5A127CB512C0A312167F9515>I E /Fe 5 111 df<126012F0A212701210A21220A21240
A2040A7D830A>59 D<120313801300C7FCA6121C12241246A25A120C5AA31231A21232A2
121C09177F960C>105 D<1318133813101300A6EA01C0EA0220EA0430A2EA08601200A3
13C0A4EA0180A4EA630012E312C612780D1D80960E>I<121F1206A45AA4EA181C136613
8EEA190CEA3200123C123FEA3180EA60C013C4A3EAC0C813700F177E9612>I<EA383CEA
44C6EA47021246EA8E06120CA3485A144013181480EA3009EB0E00120E7F8D15>110
D E /Ff 18 121 df<EA03806C7E6C7E7F1370A213781338A2133C131CA2131E130EA213
0F7FA21480A2130FEB1BC013311361EBC1E0EA01C0EA0380EA0700000E13705A5A007813
784813385A48131C16237DA21C>21 D<127012F8A3127005057C840E>58
D<127012F812FCA212741204A41208A21210A212201240060F7C840E>I<811401811403
1407A2140BA2141314331423EC43E0A21481EB0101A21302A213041308A201107FEB1FFF
EB20005BA25BA248C7FC120281481478120C001E14F83AFF800FFF8021237EA225>65
D<90B512F090380F001E81ED0780011E1303A216C0A24914801507A2ED0F0049131E5D5D
EC03E090B55A9038F000F0157881485A151C151EA248485BA35D485A5D4A5AEC0380000F
010FC7FCB512F822227DA125>I<90B512F090380F003C150E81011EEB0380A2ED01C0A2
5B16E0A35BA449EB03C0A44848EB0780A216005D4848130E5D153C153848485B5D4A5A02
07C7FC000F131CB512F023227DA128>68 D<EBFFF8EB0F00A3131EA45BA45BA45BA4485A
A4485AA4485AA4120FEAFFF815227DA116>73 D<EBFFFCEB0F8091C7FCA2131EA45BA45B
A45BA4485AA21520A248481340A21580A23807800115005C140F000F133EB512FE1B227D
A121>76 D<EA03C0EA3F801203A348C7FCA4120EA45A137CEA1D86EA1E03003C13801238
14C0A21270A438E00780A3EB0F00130EEA601CA2EA3030EA18E0EA0F8012237EA215>98
D<13E0A21201EA00C01300A9121E1223EA4380A21283EA8700A21207120EA35AA3EA3820
1340127013801230EA3100121E0B227EA111>105 D<147014F0A214601400A9130FEB31
80EB41C01381A2EA0101A238000380A4EB0700A4130EA45BA45BA3EA7070EAF0605BEA63
80003EC7FC142C81A114>I<13F0EA0FE01200A3485AA4485AA448C7FC1478EB0184EB02
1C380E0C3C1310EB2018EB4000485A001FC7FC13E0EA1C38487EA27F140838701C10A3EB
0C20EAE006386003C016237EA219>I<393C07E01F3A46183061803A47201880C03A8740
1D00E0EB801E141C1300000E90383801C0A4489038700380A2ED070016044801E0130815
0EA2ED0610267001C01320D83000EB03C026157E942B>109 D<383C07C0384618603847
20303887403813801300A2000E1370A44813E0A2EB01C014C1003813C2EB038214841301
00701388383000F018157E941D>I<3803C0F03804631CEB740EEA0878EB7007A2140FEA
00E0A43801C01EA3143C38038038A2EBC07014E038072180EB1E0090C7FCA2120EA45AA3
B47E181F819418>112 D<001E131800231338EA438014701283A2EA8700000713E0120E
A3381C01C0A314C2EB0384A21307380C0988EA0E113803E0F017157E941C>117
D<001E13E0EA2301384381F01380008313701430EA870000071320120EA3481340A21480
A2EB0100A21302EA0C04EA0618EA03E014157E9418>I<3801E0F03806310C38081A1C00
10133CEA201C14181400C65AA45BA314083860E01012F0142038E1704038423080383C1F
0016157E941C>120 D E /Fg 15 119 df<121C127FA2EAFF80A3EA7F00A2121C09097B
8813>46 D<130E131E137EEA07FE12FFA212F81200B3ABB512FEA317277BA622>49
D<EC0780A24A7EA34A7EA24A7EA3EC77F8A2ECF7FC14E3A2903801C1FEA201037F1480A2
49486C7EA24980010E133FA2496D7EA2013FB57EA39039700007F8A201F0804913030001
81491301A2000381D8FFFE013F13FCA32E297EA833>65 D<3803FF80000F13F0381F01FC
383F80FE147F801580EA1F00C7FCA4EB3FFF3801FC3FEA0FE0EA1F80EA3F00127E5AA414
5F007E13DF393F839FFC381FFE0F3803FC031E1B7E9A21>97 D<EAFFE0A3120FACEBE1FE
9038EFFF809038FE07E09038F803F09038F001F89038E000FCA2157EA2157FA8157EA315
FCA29038F001F89038F803F090389C0FE090380FFF80390E01FC00202A7EA925>I<EB3F
C03801FFF03803E07C380F803E001F7F130048EB0F80127E15C0A200FE1307A2B6FCA248
C8FCA3127EA2127F6CEB01C07E390F8003803907C007003803F01E3800FFFCEB3FE01A1B
7E9A1F>101 D<EAFFE0A3120FAC147E9038E1FF809038E30FC001E413E0EBE80701F813
F013F0A213E0B039FFFE3FFFA3202A7DA925>104 D<1207EA0F80EA1FC0EA3FE0A3EA1F
C0EA0F80EA0700C7FCA7EAFFE0A3120FB3A3EAFFFEA30F2B7EAA12>I<EAFFE0A3120FB3
B2EAFFFEA30F2A7EA912>108 D<EB3FE03801FFFC3803F07E390FC01F80391F800FC039
3F0007E0A2007EEB03F0A300FE14F8A8007E14F0A26CEB07E0A2391F800FC0390FC01F80
3907F07F003801FFFC38003FE01D1B7E9A22>111 D<38FFC1F0EBC7FCEBC63E380FCC7F
13D813D0A2EBF03EEBE000B0B5FCA3181B7F9A1B>114 D<3803FE30380FFFF0EA3E03EA
7800127000F01370A27E00FE1300EAFFE06CB4FC14C06C13E06C13F0000713F8C6FCEB07
FC130000E0137C143C7E14387E6C137038FF01E038E7FFC000C11300161B7E9A1B>I<13
E0A41201A31203A21207120F381FFFE0B5FCA2380FE000AD1470A73807F0E0000313C038
01FF8038007F0014267FA51A>I<39FFE07FF0A3000F1307B2140FA2000713173903F067
FF3801FFC738007F87201B7D9A25>I<39FFFC03FFA3390FF000F0000714E07F0003EB01
C0A2EBFC0300011480EBFE070000140013FFEB7F0EA2149EEB3F9C14FC6D5AA26D5AA36D
5AA26D5AA2201B7F9A23>I E /Fh 43 127 df<13E0A538F0E1E0EAFCE7387EEFC0381F
FF00EA07FCEA01F0EA07FCEA1FFF387EEFC038FCE7E0EAF0E13800E000A513157D991A>
42 D<1230127812FCA212781230060676851A>46 D<14C0EB01E0A2130314C013071480
130F1400A25B131E133E133C137C1378A213F85B12015B12035BA212075B120F90C7FC5A
121EA2123E123C127C127812F85AA2126013277DA21A>I<13C01201A212031207120F12
7F12FD12711201B2EA7FFFA3101E7B9D1A>49 D<EB0F80131F133BA2137313F313E3EA01
C3120313831207EA0F03120E121E123C1238127812F0B512FEA338000380A6EB3FF8EB7F
FCEB3FF8171E7F9D1A>52 D<383FFFC05AA20070C7FCA8EA71F8EA7FFEEBFF80387E07C0
EA7801383000E0C7FC1470A3126012F014E0EAE001387003C0387C0F80383FFF00EA0FFE
EA03F0141E7D9D1A>I<137E3801FF804813C0380781E0EA0F01121E383C00C000381300
5AA3EAE1F8EAE7FEB5FC38FE078038F803C0EAF001EB00E0A25A7E1270A2EB01C0123838
3C0380EA1E0F380FFF00EA07FCEA01F0131E7D9D1A>I<1338137CA2136C13EEA313C6A2
EA01C7A3138300031380A4380701C0A213FFA24813E0EA0E00A3001E13F0001C1370387F
01FC38FF83FE387F01FC171E7F9D1A>65 D<EB7C38EA01FF000713F8EA0F83EA1E00001C
13785A14385AA214005AA812701438A27EA26C1370001E13F0380F83E03807FFC0000113
8038007C00151E7E9D1A>67 D<EA7FFEB5FC6C1380381C07C0EB01E0EB00F01470147814
38A2143C141CA8143C1438A21478147014F0EB01E0EB07C0EA7FFFB512006C5A161E7F9D
1A>I<B512F8A3381C0038A41400A3130EA3EA1FFEA3EA1C0EA390C7FCA3141CA5B512FC
A3161E7E9D1A>I<B512F8A3381C0038A41400A31307A3EA1FFFA3EA1C07A390C7FCA8EA
FFC0A3151E7E9D1A>I<EA7FFFB512806C1300EA01C0B3A6EA7FFFB512806C1300111E7C
9D1A>73 D<EA7FE012FF127F000EC7FCB3141CA5387FFFFCB5FC7E161E7F9D1A>76
D<00FC137E6C13FEA2383B01B8A31383A200391338A213C7A2EA38C613EEA2136CA2137C
1338A21300A700FE13FEA3171E7F9D1A>I<38FE03FE12FFA2381D8070A213C0121CA213
E0A213601370A213301338A21318131CA2130C130EA21306A213071303A238FF81F0A213
80171E7F9D1A>I<EA0FFE383FFF804813C0EA7C07EA700100F013E0EAE000B1EAF001A2
007013C0EA7C07EA7FFF6C1380380FFE00131E7D9D1A>I<EAFFFEEBFF8014C0381C03E0
EB00F0147014781438A41478147014F0EB03E0381FFFC01480EBFE00001CC7FCA9B47EA3
151E7E9D1A>I<EAFFFC13FF1480381C07C0EB01E0EB00F01470A414F0EB01E0EB07C038
1FFF8014001480381C07C01301EB00E0A514E214E7A338FF807EA21438181E7F9D1A>82
D<3803F8E0EA0FFEEA1FFFEA3C07EA780112F0EAE000A3140012701278EA3F80EA1FF8EA
07FF38007FC0EB07E0EB00F014701438A2126012E0A214706C13F038FE01E0B512C000EF
138038E1FE00151E7E9D1A>I<387FFFFEB5FCA238E0380EA400001300B3A23803FF80A3
171E7F9D1A>I<38FF01FEA3381C0070A3001E13F0000E13E0A3EA0F01000713C0A33803
8380A40001130013C7A3EA00C613EEA3136C137CA21338171E7F9D1A>86
D<383FFFF85AA23870007014E0130114C03800038013071400130E131E131C5B13785B5B
485A12035B48C7FC5A000E13385A123C12385AB512F8A3151E7E9D1A>90
D<387FFFC0B512E0A26C13C013047D7E1A>95 D<EA1FF0EA3FFC487EEA780FEA30073800
0380A2137FEA07FF121FEA3F83EA7803127012E0A3EA7007EA780F383FFFFCEA1FFDEA07
F016157D941A>97 D<127E12FE127E120EA6133EEBFF80000F13E0EBC1F0EB8070EB0038
120E141CA7000F13381478EB80F0EBC1E0EBFFC0000E138038063E00161E7F9D1A>I<EB
FF80000313C0000F13E0EA1F01383C00C04813001270A25AA51270A2007813707E381F01
F0380FFFE0000313C03800FE0014157D941A>I<EB0FC0131F130F1301A6EA01F1EA07FD
EA0FFFEA1E0FEA3C07EA7803EA700112E0A7EA7003A2EA3807EA3E0F381FFFF83807FDFC
3801F1F8161E7E9D1A>I<EA01F8EA07FF481380381E07C0EA3C01387800E01270481370
A2B512F0A300E0C7FC1270A2007813707E381F01F0380FFFE0000313803800FE0014157D
941A>I<EB07E0EB1FF0EB3FF8EB7878EBF030EBE000A4387FFFF0B5FCA23800E000AF38
3FFF804813C06C1380151E7F9D1A>I<3801F87C3807FFFE5A381E078C381C0380383801
C0A5381C0380EA1E07381FFF005BEA39F80038C7FCA27E381FFF8014E04813F83878007C
0070131C48130EA40070131C0078133C003E13F8381FFFF0000713C00001130017217F94
1A>I<13C0487EA26C5A90C7FCA6EA7FE0A31200AF387FFF80B512C06C1380121F7C9E1A>
105 D<12FEA3120EA6EB0FFC131F130FEB03C0EB0780EB0F00131E5B5B13FC120F13DE13
8F380E07801303EB01C014E0EB00F038FFE3FEA3171E7F9D1A>107
D<EA7FE012FF127F1200B3A6387FFFC0B512E06C13C0131E7D9D1A>I<387CE0E038FFFB
F8EA7FFF381F1F1CEA1E1EA2EA1C1CAC387F1F1F39FFBFBF80397F1F1F00191580941A>
I<EA7E3E38FEFF80007F13C0EA0FC1EB80E01300120EAC387FC3FC38FFE7FE387FC3FC17
157F941A>I<EA01F0EA07FCEA1FFF383E0F80EA3C07387803C0EA700138E000E0A6EAF0
01007013C0EA7803383C0780EA3E0F381FFF00EA07FCEA01F013157D941A>I<EA7E3E38
FEFF80007F13E0380FC1F0EB8070EB0038120E141CA7000F13381478EB80F0EBC1E0EBFF
C0000E1380EB3E0090C7FCA8EA7FC0487E6C5A16207F941A>I<387F81F838FF8FFC387F
9FFE3803FE1EEBF80CEBE000A25B5BAAEA7FFFB5FC7E17157F941A>114
D<3807FB80EA1FFF127FEA7807EAE003A30078C7FCEA7FC0EA1FFCEA07FE38003F801307
386001C012E0A2EAF00338FC0780B51200EAEFFEEAE3F812157C941A>I<487E1203A638
7FFFE0B5FCA238038000AA1470A43801C1E013FF6C1380EB3F00141C7F9B1A>I<387F83
FC38FFC7FE387F83FC380E00E0A3380701C0A338038380A33801C700A3EA00EEA3137CA2
133817157F941A>118 D<EA0703381F8780EA3FCF38F9FE00EAF0FCEA607011067C9D1A>
126 D E /Fi 37 121 df<EC3FF8903803FFFE90390FF80F8090393FC001C090397F0007
E001FE130F00014A7E5B1203A26F5A6F5A0301C7FC92C8FCA5B712F0A33903FC001F150F
B3A7267FFFE1B51280A329327FB12D>12 D<B512F8A715077F921B>45
D<121E123FEA7F80EAFFC0A4EA7F80EA3F00121E0A0A7A8916>I<EB01C01303130F137F
EA1FFFB5FC13BFEAE03F1200B3B1007FB512F0A31C2E7AAD28>49
D<EB3FE03801FFFE0007EBFF80D80F8013C0391E003FE00038EB1FF0007CEB0FF8007EEB
07FCB4FC018013FEA21403A2EA7F00003E1307C7FC15FCA2EC0FF8A215F0EC1FE015C0EC
3F80EC7F00147E14F8495A495A495A49C7FC011E130E5B133849131E49131C485A48C712
3C48B512FC5A5A5A4814F8B6FCA31F2E7CAD28>I<EB1FF890B5FC000314C03907E01FF0
390F0007F8D81F807FEA3FC06E7EA4EA1F80380F0007C75BA25D4A5A4A5AEC3F8002FFC7
FCEB3FF8ECFF809038001FE06E7E6E7E6E7E816E7EA21680A3121C123E127FEAFF801600
A24A5AEA7F00007E495A003C5C391FC01FF06CB512C0000391C7FC38003FF8212E7DAD28
>I<157015F0140114031407140FA2141F143F147714F714E7EB01C7EB0387EB0707130F
130E131C1338137013F013E0EA01C0EA0380EA07005A120E5A5A5A5AB712E0A3C7380FF0
00A9010FB512E0A3232E7EAD28>I<000C1430390FC007F090B512E015C0158015005C14
F85C1480000EC8FCA8EB1FF0EBFFFE390FE03F809038000FC0000EEB07E0000C14F0C713
F8140315FCA215FEA21218123E127F5AA215FCA25A0078EB07F815F06CEB0FE06CEB1FC0
390FC07F806CB51200000113FC38003FE01F2E7CAD28>I<14FF010713E0011F7F90387F
80F89038FE003CD801F8137C484813FE00071301EA0FE0A2EA1FC0003F6D5A157892C7FC
485AA338FF83FC90388FFF8090389C0FC09038B003F06E7E01E07F01C07F140081A24914
80A4127FA4003F15007F121F5D000F495AEA07E06C6C485A3901FC0FE06CB55A013F90C7
FCEB0FFC212E7DAD28>I<1578A215FCA34A7EA24A7EA24A7FA34A7FEC0E7F021E7FEC1C
3FA202387F151F02787FEC700FA202E07F1507010180ECC003A249486C7EA201078191C7
FC498191B6FCA24981011CC7123F013C810138141FA24981160F01F081491407A2484881
486C1403B549B512FCA336317DB03D>65 D<913A03FF800180023FEBF00349B5EAFC0701
079038003F0FD91FF8EB079FD93FC0EB01FFD9FF807F4848C8127F4848153F0007161F49
150F485A001F1607A2485A1703127FA24992C7FCA212FFA9127FA27FEF0380123FA26C7E
1707000F17006C7E6D150E0003161E6C6C151C6C6C6C1478D93FC05CD91FF8EB03E0D907
FFEB3F800101D9FFFEC7FCD9003F13F80203138031317CB03A>67
D<DA03FF1303027FEBF00749B5EAFC0F01079038007E1FD91FF0EB0FBFD97FC0EB03FF49
487F4848C87E485A0007824848815B001F82A2484881A2127FA24992C7FC12FFAA0307B5
12F8127F7FDB00011300123FA26C7EA2120F7F6C7E12036C7E6C6C7E6D6C5BD91FF8497E
D907FFEB3E3F01019038FFFC1F6D6CEBF00F0203EB800335317CB03F>71
D<B500C00303B5FCA26E5DC61900D9EFF0150EA3D9E7F85DA2D9E3FC5DA2D9E1FE5DA2D9
E0FF5DA26E6C495AA26E6C495AA36E6C495AA26E6C130EA26E6C5BA26E6C5BA26E6C5BA2
6E6C5BA392387F81C0A292383FC380A2DB1FE7C7FCA2ED0FFEA26F5AA36F5A487EB526E0
01F090B6FCA26F5A48317EB04D>77 D<B712E016FEEEFF80C6D9800013E0EE3FF0EE0FF8
EE07FCA2EE03FEA217FFA717FEA2EE07FC17F8160FEE3FE0EEFFC091B6120016F80280C8
FCB3A2B67EA330317EB037>80 D<90391FF8018090B51203000314C73907F007EF390F80
00FF48C7127F003E141F150F5A150712FCA215037EA26C91C7FC13C0EA7FF0EBFF806C13
F8ECFF806C14F06C806C806C14FFC6FC013F1480010114C0D9001F13E01401EC003FED1F
F0150F1507126000E01403A316E07EA26CEC07C07EB4EC0F8001C0EB1F00D8FBFC13FE00
F1B512F8D8E03F5BD8C003138024317CB02D>83 D<B500FC91B5FCA3000390C8EA03C06C
17806E14076C170080017F150EA26E141E013F151C6E143C011F153880010F5D8001075D
A26E130101035D6E13036D5D15806D4AC7FCA26F5A027F130EEDE01E023F131CEDF03C02
1F133815F8020F5BA2EDFCF002075B15FF6E5BA26E5BA26E90C8FCA3157EA2153CA23831
7EB03D>86 D<EBFFF0000313FF390F803F809038C00FE0486C6C7EA26E7ED80FC07FEA07
80C7FCA414FF131FEBFFE33803FC03EA0FF0EA1FC0123FEA7F80A2EAFF00A31407A2387F
800D393FC01DFE3A1FE078FFF03907FFE07FC6EB803F24207E9F27>97
D<EB0FFF017F13C03901FC01F03803F0033907E007F8120FEA1FC0003FEB03F0EC01E048
48C7FCA312FFA8127FA36C6C131CA2001F14386C7E000714703903F001E03901FC07C039
007FFF00EB0FF81E207D9F24>99 D<ED0FC0EC07FFA3EC007F153FADEB07F8EB3FFF9038
FE07BF3903F801FF3907E0007F120F4848133F123FA2485AA312FFA8127FA36C7EA2121F
6C6C137F000714FF2603F00313E03A01FC0F3FFE38007FFEEB0FF027327DB12D>I<EB0F
FC90387FFF803901FC0FC03903F003E03907E001F0000F14F8391FC000FC003F14FEA248
48137E157FA212FFA290B6FCA20180C7FCA4127FA36C6C1307121F150E6C7E6C6C131C6C
6C13783900FE03E090383FFFC0903807FE0020207E9F25>I<EB01FE90380FFF8090381F
C3C090387F07E09038FE0FF0120113FC1203EC07E0EC018091C7FCA8B512FCA3D803FCC7
FCB3A8387FFFF0A31C327EB119>I<90391FF007C09039FFFE3FE03A01F83F79F03907E0
0FC3000F14E19039C007E0E0001FECF000A2003F80A5001F5CA2000F5CEBE00F00075C26
03F83FC7FC3806FFFE380E1FF090C9FC121EA2121F7F90B57E6C14F015FC6C806C801680
000F15C0003FC7127F007EEC1FE0007C140F00FC1407A4007EEC0FC0003E1580003F141F
D80FC0EB7E003907F803FC0001B512F0D8001F90C7FC242F7E9F28>I<EA01F812FFA312
0F1207ADEC07F8EC3FFEEC783F02C013809039F9801FC0EBFB0001FE14E05BA35BB3B500
C3B5FCA328327DB12D>I<EA03C0487E487E487EA46C5A6C5A6C5AC8FCA9EA01F8127FA3
1207B3A7B51280A311337DB217>I<EA01F812FFA3120F1207ADEDFFF8A3ED3F00153C5D
5DEC03C04A5A4AC7FC141E147814FCEBF9FE13FB90B5FC496C7E01FC7FEBF83F496C7E6E
7E816E7E14036E7E6E7E1680157F16C0B53881FFFEA327327EB12B>107
D<EA01F812FFA3120F1207B3B3A6B512C0A312327DB117>I<2703F007F8EB1FE000FFD9
3FFEEBFFF8913A783F01E0FC02C090388300FE280FF1801FC6137F2607F30013CC01F602
F8148001FC5CA3495CB3B500C3B5380FFFFCA33E207D9F43>I<3903F007F800FFEB3FFE
EC783F02C013803A0FF1801FC03807F30001F614E013FCA35BB3B500C3B5FCA328207D9F
2D>I<EB07FC90387FFFC03901FC07F03903F001F848486C7E4848137E001F147F003F15
8049133F007F15C0A300FF15E0A8007F15C0A36C6CEB7F80A2001F15006C6C13FE00075C
3903F803F83901FE0FF039007FFFC0D907FCC7FC23207E9F28>I<3901F83FE000FFEBFF
FC9038FBE07F9039FF003F80D807FEEB1FC049EB0FE04914F0ED07F8A216FC1503A216FE
A816FC1507A216F8A2ED0FF06D14E06DEB1FC06DEB3F809039FBC0FE009038F8FFF8EC3F
C091C8FCABB512C0A3272E7E9F2D>I<3803F03F00FFEB7FC09038F1C3E01487390FF30F
F0EA07F6A29038FC07E0EC03C091C7FCA25BB2B512E0A31C207E9F21>114
D<3801FF86000713FEEA1F00003C133E48131E140E12F8A36C90C7FCB47E13FC387FFFC0
6C13F0806C7F00077F00017FEA003F01001380143F0060131F00E0130FA27E15007E6C13
1E6C131C38FF807838F3FFF038C07F8019207D9F20>I<131CA5133CA3137CA213FC1201
12031207381FFFFEB5FCA2D803FCC7FCB0EC0380A71201EC0700EA00FEEB7F0EEB3FFCEB
07F0192E7FAD1F>I<D801F8EB07E000FFEB03FFA3000FEB003F0007141FB3153FA20003
147FA26C6CEBDFF03A00FE039FFF90387FFF1FEB0FFC28207D9F2D>I<B5EB1FFCA3D80F
F8EB03C0000715806D1307000315007F0001140E7F6C5CA2EC803C017F1338ECC078013F
1370ECE0F0011F5B14F1010F5B14F9903807FB80A214FF6D90C7FCA26D5AA26D5AA21478
A226207E9F2B>I<B53A1FFFE03FF8A33C0FF000FE0007806D150300076EEB0700816D5D
00039138FF800EA26C6C486D5A15DF01FF153C6C9039038FE038A2D97F876D5A150702C7
14F0D93FCF6D5AECCE03D91FFEEBF9C09138FC01FD16FF010F5D4A7EA26D486DC7FCA201
03147E4A133EA26D48131C35207E9F3A>I<3A7FFF807FFCA33A03FC000F006C6C131E6C
6C5BEC803890387FC078013F5B90381FE1E090380FF3C0ECFF806D90C7FC6D5A13016D7E
81815B903803DFE09038078FF08190380F07FC90381E03FEEB3C01496C7E4914804848EB
7FC00003EC3FE026FFFC01B5FCA328207F9F2B>I E /Fj 21 119
df<1238127C12FEA3127C12381200A81238127C12FEA3127C123807167C9510>58
D<B51280A23807F000B3ACB51280A211227EA115>73 D<B512C0A2D807F0C7FCB31518A4
1538A21570A215F014011407B6FCA21D227EA122>76 D<B6FC15E03907F007F0EC01FC14
00157EA2157FA5157EA215FC1401EC07F090B512E0150001F0C7FCADB57EA220227EA126
>80 D<B512FEECFFC03907F007F0EC01F86E7E157E157FA6157E5D4A5AEC07F090B512C0
5D9038F00FE06E7E6E7E6E7EA81606EC00FEEDFF0CB538803FF8ED0FF027227EA12A>82
D<3801FE023807FF86381F01FE383C007E007C131E0078130EA200F81306A27E1400B4FC
13E06CB4FC14C06C13F06C13F86C13FC000313FEEA003F1303EB007F143FA200C0131FA3
6C131EA26C133C12FCB413F838C7FFE00080138018227DA11F>I<EA0FFC383FFF80387E
07C0EB03E0130114F0123C1200A2133FEA03FDEA1FC1EA3F01127E12FCA4EA7E02EB0CF8
381FF87F3807E03F18167E951B>97 D<EBFF80000713E0380F83F0EA1F03123E127E387C
01E090C7FC12FCA6127C127EA2003E13186C1330380FC0603807FFC0C6130015167E9519
>99 D<13FE3807FF80380F87C0381E01E0003E13F0EA7C0014F812FCA2B5FCA200FCC7FC
A3127CA2127E003E13186C1330380FC0703803FFC0C6130015167E951A>101
D<3801FE0F3907FFBF80380F87C7381F03E7391E01E000003E7FA5001E5BEA1F03380F87
C0EBFF80D809FEC7FC0018C8FCA2121C381FFFE06C13F86C13FE001F7F383C003F48EB0F
80481307A40078EB0F006C131E001F137C6CB45A000113C019217F951C>103
D<121C123E127FA3123E121CC7FCA7B4FCA2121FB2EAFFE0A20B247EA310>105
D<B4FCA2121FABECFF80A2EC38001460495A495A49C7FC130E5B137E13FF13CFEB0F806D
7E6D7E1301806D7E147C143C39FFE0FFC0A21A237EA21E>107 D<B4FCA2121FB3ADEAFF
E0A20B237EA210>I<3AFF07F007F090391FFC1FFC3A1F303E303E01401340496C487EA2
01001300AE3BFFE0FFE0FFE0A22B167E9530>I<38FF07E0EB1FF8381F307CEB403CEB80
3EA21300AE39FFE1FFC0A21A167E951F>I<13FE3807FFC0380F83E0381E00F0003E13F8
48137CA300FC137EA7007C137CA26C13F8381F01F0380F83E03807FFC03800FE0017167E
951C>I<38FF0FE0EB3FF8381FE07CEB803E497E1580A2EC0FC0A8EC1F80A29038803F00
EBC03EEBE0FCEB3FF8EB0FC090C8FCA8EAFFE0A21A207E951F>I<EAFE1FEB3FC0381E67
E013C71387A2381F83C090C7FCADEAFFF0A213167E9517>114 D<EA0FF3EA3FFFEA781F
EA6007EAE003A212F000FCC7FCEA7FE013F8EA3FFEEA0FFF120138000F80EAC007130312
E0A238F00700EAFC0EEAEFFCEAC7F011167E9516>I<487EA41203A21207A2120F123FB5
FCA2EA0F80ABEB8180A5EB8300EA07C3EA03FEEA00F811207F9F16>I<39FFE01FE0A239
1F800700000F1306EBC00E0007130C13E000035BA26C6C5AA26C6C5AA2EB7CC0A2137F6D
5AA26DC7FCA2130EA21B167F951E>118 D E /Fk 3 16 df<B612FCA21E027C8C27>0
D<13C0A538E0C1C0EAF0C33838C700EA0EDCEA03F0EA00C0EA03F0EA0EDCEA38C738F0C3
C0EAE0C13800C000A512157D9619>3 D<EA03F0EA0FFC487E487E481380A2B512C0A86C
1380A26C13006C5A6C5AEA03F012147D9519>15 D E /Fl 79 123
df<1460A214F0A2497E1478EB027C143CEB043E141EEB081F8001107F140701207F1403
01407F140101807F140048C77E15780002147C153C48143E151E48141F81481580150748
15C01503007FB612E0A2B712F024237EA229>1 D<90381FC1F090387037189038C03E3C
3801807C000313783907003800A9B612C03907003800B2143C397FE1FFC01E2380A21C>
11 D<EB1FC0EB7020EBC0103801803800031378EA0700143091C7FCA7B512F838070078
1438B2397FE1FF80192380A21B>I<EB1FD8EB7038EBC078EA0180120338070038A9B512
F838070038B3397FF3FF80192380A21B>I<90380FC07F90397031C0809039E00B004026
01801E13E00003EB3E013807003C91381C00C01600A7B712E03907001C011500B23A7FF1
FFCFFE272380A229>I<127012F8A71270AC1220A61200A5127012F8A3127005247CA30E>
33 D<EA7038EAF87CEAFC7EA2EA743AEA0402A4EA0804A2EA1008A2EA2010EA40200F0F
7EA218>I<127012F812FCA212741204A41208A21210A212201240060F7CA20E>39
D<132013401380EA01005A12061204120CA25AA25AA312701260A312E0AE1260A3127012
30A37EA27EA2120412067E7EEA0080134013200B327CA413>I<7E12407E7E12187E1204
1206A27EA2EA0180A313C01200A313E0AE13C0A312011380A3EA0300A21206A21204120C
5A12105A5A5A0B327DA413>I<7FA538C08180EAF08738388E00EA0EB8EA03E06C5A487E
EA0EB8EA388E38F08780EAC08138008000A511157DA418>I<497EB0B612FEA239000180
00B01F227D9C26>I<127012F812FCA212741204A41208A21210A212201240060F7C840E>
I<EAFFF8A20D02808B10>I<127012F8A3127005057C840E>I<14801301A2EB0300A31306
A35BA35BA35BA35BA35BA3485AA448C7FCA31206A35AA35AA35AA35AA35AA311317DA418
>I<EA01F0EA071CEA0C06487E00381380A2387001C0A400F013E0AE007013C0A3EA7803
00381380A2381C0700EA0C06EA071CEA01F013227EA018>I<13801203120F12F31203B3
A9EA07C0EAFFFE0F217CA018>I<EA03F0EA0C1CEA100700201380384003C0A2008013E0
12F0EAF801A3EA2003120014C0A2EB07801400130E5B13185B5B5B485A90C7FC00021320
5A5A00181360481340383FFFC05AB5FC13217EA018>I<EA03F8EA0C1EEA100F38200780
004013C0127813031307123800001380A214005B130C1338EA03F0EA001C130FEB0780A2
EB03C0A214E01220127012F8A200F013C01240EB0780122038100F00EA0C1CEA03F01322
7EA018>I<1303A25BA25B1317A21327136713471387120113071202120612041208A212
101220A2124012C0B512F838000700A7EB0F80EB7FF015217FA018>I<00101380381E07
00EA1FFF5B13F8EA17E00010C7FCA6EA11F8EA120CEA1C07381803801210380001C0A214
E0A4127012F0A200E013C01280EA4003148038200700EA1006EA0C1CEA03F013227EA018
>I<137EEA01C138030080380601C0EA0C03121C381801800038C7FCA212781270A2EAF0
F8EAF30CEAF4067F00F81380EB01C012F014E0A51270A3003813C0A238180380001C1300
EA0C06EA070CEA01F013227EA018>I<12401260387FFFE014C0A23840008038C0010012
801302A2485A5BA25B5BA21360134013C0A21201A25B1203A41207A76CC7FC13237DA118
>I<EA01F8EA060EEA0803381001801220386000C0A31270A238780180003E1300EA3F02
EA1FC4EA0FF812036C7EEA067EEA083F38100F80383007C0EA6003EB00E05A1460A40060
134014C06C138038180300EA0E0EEA03F013227EA018>I<EA01F0EA060C487EEA180738
3803801270A238F001C0A314E0A5127013031238EA1805120CEA0619EA03E1380001C0A3
EB0380A21230387807001306EA700CEA20186C5AEA0FC013227EA018>I<127012F8A312
701200AB127012F8A3127005157C940E>I<127012F8A312701200AB127012F8A3127812
08A41210A312201240A2051F7C940E>I<B612FEA2C9FCA8B612FEA21F0C7D9126>61
D<EA07E0EA1838EA201CEA400EEA800F12F0A31200130E131C13381330136013C0A21380
A212011300A6C7FCA5EA0380EA07C0A3EA038010237DA217>63 D<497EA3497EA3EB05E0
A2EB09F01308A2EB1078A3497EA3497EA2EBC01F497EA248B51280EB0007A20002EB03C0
A348EB01E0A348EB00F0121C003EEB01F839FF800FFF20237EA225>65
D<B512F8380F800E0007EB0780EC03C015E0140115F0A515E01403EC07C0EC0F80EC3E00
EBFFFE9038800780EC03C0EC01E015F0140015F8A6EC01F0A2EC03E0EC07C0000FEB0F00
B512FC1D227EA123>I<903807E0109038381830EBE0063901C0017039038000F048C7FC
000E1470121E001C1430123CA2007C14101278A200F81400A812781510127C123CA2001C
1420121E000E14407E6C6C13803901C001003800E002EB381CEB07E01C247DA223>I<B5
12F0380F801E00071307EC0380EC01C0EC00E015F01578A2157C153CA3153EA9153CA215
7C1578A215F015E01401EC03C0EC0700000F131EB512F01F227EA125>I<B612C0380F80
070007130114001540A215601520A314201500A3146014E013FF138014601420A3150814
00A21510A31530A2157015E0000F1303B6FC1D227EA121>I<B612C0380F800700071301
14001540A215601520A314201500A3146014E013FF138014601420A491C7FCA9487EEAFF
FE1B227EA120>I<903807F00890383C0C18EBE0023901C001B839038000F848C7127848
1438121E15185AA2007C14081278A200F81400A7EC1FFF0078EB00F81578127C123CA27E
A27E7E6C6C13B86C7E3900E0031890383C0C08903807F00020247DA226>I<39FFFC3FFF
390FC003F039078001E0AE90B5FCEB8001AF390FC003F039FFFC3FFF20227EA125>I<EA
FFFCEA0FC0EA0780B3ACEA0FC0EAFFFC0E227EA112>I<3803FFE038001F007FB3A61270
12F8A2130EEAF01EEA401C6C5AEA1870EA07C013237EA119>I<EAFFFCEA1F806CC7FCB3
A21401A41403A214021406A2141E48137EB512FE18227DA11E>76
D<D8FFC0EB03FF000F15F0000715E0D805E01305A2D804F01309A301781311A36D1321A3
6D1341A26D1381A39038078101A3EB03C2A2EB01E4A3EB00F8A31470120E001FEC03F03A
FFE0203FFF28227EA12D>I<39FF8007FF3907C000F81570D805E01320EA04F0A2137813
7C133C7F131F7FEB0780A2EB03C0EB01E0A2EB00F014F81478143C143E141E140FA2EC07
A0EC03E0A21401A21400000E1460121FD8FFE0132020227EA125>I<EB0FE0EB783CEBE0
0E3903C0078039078003C0390F0001E0000E1300001E14F0481478A2007C147CA2007814
3CA200F8143EA90078143C007C147CA2003C1478003E14F8001E14F06CEB01E0A2390780
03C03903C007803900E00E00EB783CEB0FE01F247DA226>I<B512F0380F803C0007130F
EC078015C0140315E0A615C014071580EC0F00143CEBFFF00180C7FCAE487EEAFFFC1B22
7EA121>I<B512E0380F803C0007130E6E7E81140381A55D14075D020EC7FC143CEBFFE0
EB80708080141E140E140FA481A3168015C014073A0FC003C10039FFFC01E2C8127C2123
7EA124>82 D<3803F020380C0C60EA1802383001E0EA70000060136012E0A21420A36C13
00A21278127FEA3FF0EA1FFE6C7E0003138038003FC0EB07E01301EB00F0A214707EA46C
1360A26C13C07E38C8018038C60700EA81FC14247DA21B>I<007FB512F8397807807800
60141800401408A300C0140C00801404A400001400B3A3497E3801FFFE1E227EA123>I<
39FFFC07FF390FC000F86C4813701520B3A5000314407FA2000114806C7E9038600100EB
3006EB1C08EB03F020237EA125>I<D8FFF0EB7FC0D81F80EB1F006CC7120C7F00071408
A26C6C5BA36C6C5BA26D136000001440A201785BA2137CD93C01C7FCA2EB1E02A36D5AA2
148CEB0788A2EB03D0A214F06D5AA26D5AA322237FA125>I<3BFFF03FFC03FE3B1F8007
E000F86C486C48137017206E7ED807801540A24A7E2603C0021480A39039E00478010001
1600A2EC083CD800F01402A2EC101E01785CA2EC200F013C5CA20260138890391E400790
A216D090391F8003F0010F5CA2EC00016D5CA20106130001025C2F237FA132>I<D8FFF0
EB7FC0D81F80EB1F00000F140C000714087F00035C6C6C5B7F00005C6D13C0017C5BD93C
01C7FC133EEB1E02EB1F06EB0F84EB078814D8EB03D014E01301AC1303EB3FFE22227FA1
25>89 D<EA0804EA1008EA2010A2EA4020A2EA8040A4EAB85CEAFC7EA2EA7C3EEA381C0F
0F7AA218>92 D<EA1FE0EA3038EA780C130EEA30071200A313FFEA07C7EA1E07123C1278
127000F01308A3130FEA7817383C2390380FC1E015157E9418>97
D<120E12FE121E120EAB131FEB61C0EB8060380F0030000E1338143C141C141EA7141C14
3C1438000F1370380C8060EB41C038083F0017237FA21B>I<EA01FEEA0703380C078012
1C383803000078C7FC127012F0A712700078134012386C1380380C0100EA0706EA01F812
157E9416>I<14E0130F13011300ABEA01F8EA0704EA0C02EA1C01EA38001278127012F0
A7127012781238EA1801EA0C0238070CF03801F0FE17237EA21B>I<EA01FCEA0707380C
0380381C01C01238007813E0EA700012F0B5FC00F0C7FCA512700078132012386C13406C
138038070300EA00FC13157F9416>I<133E13E33801C780EA0387130748C7FCA9EAFFF8
0007C7FCB27FEA7FF0112380A20F>I<14703803F198380E1E18EA1C0E38380700A20078
1380A400381300A2EA1C0EEA1E1CEA33F00020C7FCA212301238EA3FFE381FFFC06C13E0
383000F0481330481318A400601330A2003813E0380E03803803FE0015217F9518>I<12
0E12FE121E120EABEB1F80EB60C0EB80E0380F0070A2120EAF38FFE7FF18237FA21B>I<
121C123EA3121CC7FCA8120E127E121E120EB1EAFFC00A227FA10E>I<13E0EA01F0A3EA
00E01300A81370EA07F012001370B3A51260EAF0E013C0EA6180EA3F000C2C83A10F>I<
120E12FE121E120EABEB03FCEB01F014C01480EB02005B5B5B133813F8EA0F1CEA0E1E13
0E7F1480EB03C0130114E0EB00F014F838FFE3FE17237FA21A>I<120E12FE121E120EB3
ADEAFFE00B237FA20E>I<390E1FC07F3AFE60E183803A1E807201C03A0F003C00E0A200
0E1338AF3AFFE3FF8FFE27157F942A>I<380E1F8038FE60C0381E80E0380F0070A2120E
AF38FFE7FF18157F941B>I<EA01FCEA0707380C0180381800C0003813E0481370A200F0
1378A700701370007813F0003813E0381C01C0380E038038070700EA01FC15157F9418>
I<EA0E1F38FE61C0380E8060380F0070000E1338143CA2141EA7143CA21438000F137038
0E80E0EB41C0EB3F0090C7FCA9EAFFE0171F7F941B>I<3801F82038070460EA0E02EA1C
01003813E0EA7800A25AA71278A2EA3801121CEA0C02EA070CEA01F0C7FCA9EB0FFE171F
7E941A>I<EA0E3CEAFE46EA1E8FEA0F0F13061300120EAD120FEAFFF010157F9413>I<EA
0F88EA3078EA601812C01308A212E0EAF000127FEA3FE0EA0FF0EA01F8EA003CEA801C13
0CA212C01308EAE018EAD030EA8FC00E157E9413>I<1202A41206A3120E121E123EEAFF
FCEA0E00AB1304A6EA07081203EA01F00E1F7F9E13>I<000E137038FE07F0EA1E00000E
1370AD14F0A238060170380382783800FC7F18157F941B>I<38FF80FE381E0078143000
0E1320A26C1340A2EB80C000031380A23801C100A2EA00E2A31374A21338A3131017157F
941A>I<39FF8FF87F393E01E03C001CEBC01814E0000E1410EB0260147000071420EB04
301438D803841340EB8818141CD801C81380EBD00C140E3900F00F00497EA2EB6006EB40
0220157F9423>I<38FF83FE381F00F0000E13C06C1380EB8100EA0383EA01C2EA00E413
78A21338133C134E138FEA0187EB0380380201C0000413E0EA0C00383E01F038FF03FE17
157F941A>I<38FF80FE381E00781430000E1320A26C1340A2EB80C000031380A23801C1
00A2EA00E2A31374A21338A31310A25BA35B12F05B12F10043C7FC123C171F7F941A>I<
383FFFC038380380EA300700201300EA600EEA401C133C1338C65A5B12015B38038040EA
07005A000E13C04813805AEA7801EA7007B5FC12157F9416>I E
/Fm 17 115 df<127812FCA212FEA2127A1202A41204A31208A212101220124007127B85
10>44 D<132013E01201120F12FF12F11201B3AD487EB512C0A212287BA71D>49
D<13FE3803FFC0380703E0380C01F0381000F8123C003E13FC147CA2001E13FC120CC712
F8A214F0EB01E014C0EB0380EB0E00EA01FE380003C0EB00E014F81478147C143EA2143F
A21230127812FCA2143E5A0040137E147C003013F86C13F0380F03E03803FFC03800FE00
18297EA71D>51 D<00181330001E13E0EA1FFF14C014005BEA11F00010C7FCA813FCEA13
07381401C0001813E0EA1000C712F01478A3147CA3127012F8A314781280004013F814F0
1260383001E0381803C0380E0F803807FE00EA01F816297DA71D>53
D<EB0FC0EB3FF0EBF018EA01C03803803C3807007C5A000E1338001E13005AA35AA3EAF8
3FEBC1C038F900E000FA1370143800FC133C141EA25A141FA41278A46C131EA2001C133C
121E000E13786C13703803C1E03801FFC038007E0018297EA71D>I<12201238003FB5FC
A214FE5A3860000400401308A21410481320A2C712401480A2EB01001302A25BA2130C5B
A31338A213781370A213F0A51201A76C5A182A7DA81D>I<137E3801FF80380381E03806
0070481338121C0018131C1238A3123CA2003E13386C1330EBC070380FE0E03807F98038
03FF007E38007F803801FFC038031FF0380E07F8381C03FCEA38000030137E0070131E14
0F5A1407A414060070130E0078130C00381318001E1338380F81E03803FFC03800FE0018
297EA71D>I<137E3801FF80380781C0380F00E0001E1370481338A248133CA200F8131E
A4141FA41278143FA27E001C135F7E6C139F3803831FEA00FCEB001EA3143E143CA21438
001C1378003E137014E0383C01C038180380381C0F00EA0FFEEA03F818297EA71D>I<12
7812FCA412781200AE127812FCA41278061A7B9910>I<14101438A3147CA314BEA3EB01
1FA39038020F80A201047F1407A201087F1403A2496C7EA3496C7EA390387FFFFCA29038
C0007E49133EA248C7123F81A20002EC0F80A21206ED07C0001FEC0FE0D8FFE0EBFFFEA2
272A7EA92C>65 D<B512C0A2D807F0C7FC6C5AB3A41501A41502A41506A2150E151E157C
0007EB01FCB6FCA220297EA825>76 D<EA03FCEA0C0738100380383C01C0003E7F6D7E12
1C1208C7FCA3137FEA03E0EA0F80EA1E005A127C0078144012F8A31301127C393C027880
381E0C7F3907F01E001A1A7E991D>97 D<120FB4FCA2121F7EACEB07E0EB1838EB600EEB
8007158090380003C0A2EC01E0A215F0A715E0A2140315C01580EB8007000EEB0F00EB40
1C380C303838080FC01C2A7EA921>I<121E123FA4121EC7FCA9120FB4FCA2121F7EB3A2
EAFFF0A20C297EA811>105 D<120FB4FCA2121F7EB3B2EAFFF0A20C2A7EA911>108
D<380F07E038FF1838EB601E380F800FEC0780010013C0140315E0A2EC01F0A715E01403
A215C0EC07801380EC0F00EB401CEB3078EB0FC090C8FCAAEAFFF0A21C267E9921>112
D<380F0F8038FF11C0EB23E0EA1F43EA0F83EB81C0EB800090C7FCB07FEAFFFCA2131A7E
9917>114 D E /Fn 23 121 df<B512F8A415047F941A>45 D<B512F0A23803FC006C5A
B3B3B1487EB512F0A2143B7CBA1C>73 D<D8FFF893381FFF806D5E0003F0E00000016001
BE166FA3019F16CFA3D98F80EC018FA2D987C0EC030FA3D983E01406A3D981F0140CA3D9
80F81418A2027C1430A36E1460A36E14C0A391390F800180A2913907C00300A3913803E0
06A36E6C5AA36E6C5AA2ED7C30A36F5AA36F5AA3486C6D5A487E486C6DC7487EB50307B5
1280A2413B7CBA49>77 D<B7FC16E03A03FC0003F86C48EB007E82EE0F80EE07C017E0EE
03F0A217F8160117FCA717F8160317F0A2EE07E0EE0FC01780EE3F0016FCED03F090B612
C001F8C9FCB3A8487EB512F0A22E3B7CBA36>80 D<D90FF0138090387FFE013901F00F81
3903C001C348C712E3000E143748143F003C141F0038140F127800701407A200F01403A4
15017EA27E007C91C7FC127E7E13C0EA1FF06CB4FC6C13F06C13FE6CEBFFC06C14F0011F
7F010313FE9038003FFF14039138007F80ED1FC0150FED07E01503A2ED01F012C0A21500
A37EA216E07E15016C15C0A26CEC03806C140700F71500D8E1C0131ED8E0F05BD8C07E13
F090380FFFE0D8800190C7FC243D7CBB2C>83 D<B500E091380FFFC0A2D807FEC83803FE
006C48ED01F86C486F5A6D5E00005FA26D1501017E5EA26D4BC7FCA26E5C011F1506A26E
140E010F150C8001075DA26E143801031530A26D6C5CA28001005DA26E1301027E5CA26E
49C8FCA21580021F1306A2EDC00E020F130CA26E6C5AA215F002035BA2EDF87002011360
A26E6C5AA215FEED7F80A36FC9FCA2151EA3150C3A3C7FBA3C>86
D<EB3F803801C0F03803003C00047F000C7F486D7E001C80003E1303003F80A3121EC7FC
A3143FEB0FF3EB7E03EA01F8EA03E0EA0FC0EA1F80EA3F00123E127E16605AA31407A200
7C130B127E003E903811F0C06C13603A07C1807F803A00FE003E0023257CA427>97
D<EB07F8EB3C0E9038F001803901E000C0484813604848133048C712704814F81401123E
A2007EEB00F0007C1400A212FCA9127CA2127E123E150C7E15186C7E000714306C6C1360
6C6C13C03900F0018090383C0E00EB07F81E257DA423>99 D<EB07F8EB3C1E9038F00780
3901C003C00003EB01E039078000F048C712F8481478001E147C123EA2007E143E127CA2
12FCA2B612FE00FCC8FCA6127CA2127E123E15067E6C140C7F000714186C6C1330C66C13
60017013C090381E0700EB03FC1F257EA423>101 D<14FCEB078390380E038090381C07
C0EB3C0F137813F8EC078049C7FC1201AEB512FCA2D801F0C7FCB3AE487E387FFFE0A21A
3C7FBB18>I<ED07C090390FE018609039383820709039F01E40F03901E00F802603C007
13600007ECC00048486C7EA3001F80A6000F5CA36C6C485A00035C6C6C48C7FC3802F01E
EB383838060FE00004C9FCA2120CA2120EA27E7F6CB5FC15F06C14FC6C8039078000FF00
0EC7EA1F8048EC07C048140312780070EC01E012F0A50078EC03C000381580003C14076C
EC0F000007141CD803C0137839007803C0D90FFEC7FC24387EA527>I<EA03E012FFA212
071203B3EC1FE0EC607CEC801E9038E3000F01E41480A201E8130716C013F0A25BB3A648
6CEB0FE0B50081B5FCA2283C7EBB2C>I<1207EA0F80EA1FC0A3EA0F80EA0700C7FCADEA
07C012FFA2120F1207B3ACEA0FE0EAFFFEA20F397DB815>I<EA07C012FFA2120F1207B3
B3B1EA0FE0EAFFFEA20F3C7DBB15>108 D<3903E01FE000FFEB607CEC801E3907E3000F
D803E41480A201E8130716C013F0A25BB3A6486CEB0FE0B50081B5FCA228257EA42C>
110 D<EB07FCEB1C0790387001C03901E000F04848137848487F48C77E48141F001E8000
3E1580A248EC07C0A300FC15E0A9007C15C0A2007E140F003E1580A2001E1500001F5C6C
141E6C6C5B6C6C5B6C6C5B39007001C0D91C07C7FCEB07FC23257EA427>I<3903E03FC0
00FFEBE0789038E3001CD807E6130FD803E8EB078001F8EB03C04914E049EB01F0A2ED00
F8A216FCA2167C167EA9167C16FCA216F8150116F0ED03E07F6DEB07C001E8EB0F8001E4
EB0E0001E3133C9038E1C0F09038E03F8091C8FCAE487EB57EA227367EA42C>I<3803E0
3E00FF13C39038E107803907E20FC0EA03E413E8EC0780EC030001F0C7FCA35BB3A5487E
B512C0A21A257EA41E>114 D<EBFF02380700C6000C132E0010131E123048130EA200E0
1306A37E7E6C90C7FC127FEA3FF0EBFF80000F13E06C7F000113FC38003FFE1301EB003F
00C07FEC0F8014076C1303A46C1400A26C5B140600E45B00E25B38C1807038807F801925
7DA41F>I<1330A61370A413F0A21201A212031207381FFFFEB5FCD801F0C7FCB3EC0180
A9000014006D5AA2EB78026D5AEB0E08EB03F019357FB41E>I<D803E0EB07C000FFEB01
FFA20007EB000F00031407B3A5150FA300011417A26C6C132715470178EB87E090391E03
07FFEB03FC28257EA42C>I<3CFFFE0FFFC03FFEA23C0FF000FE0007F06C48017CEB03E0
000317C0033CEB0180153E6C6CED0300A2153F6C6C1506156F1680017C5D15C716C0D93E
015C158316E0D91F035C150116F0D90F875CEC860016F8D907CE5C02CC1378167CD903FC
EB7D804A133D163F010192C7FC4A7FA20100141E4A130EA237257FA439>119
D<D8FFFEEB3FFEA2D807FCEB1FF06C48EB0F80000192C7FC0000140E017C5B017E13186D
5B6D5B90380F80E0ECC1C0903807E180D903E3C8FC14F7EB01FE6D5A147C147E147FA2EC
CF8001017F90380387E0EB070390380601F0010C7F90381C00FC49137C01307F49133F01
E06D7E0001140F000781D81FF0EB1FF0B46C90387FFF80A229257FA42A>I
E end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 300dpi
TeXDict begin

%%EndSetup
%%Page: 1 1
1 0 bop 38 251 a Fn(Sparse)27 b(Matrix-V)-7 b(ector)29
b(Multiplicati)q(on)g(with)f(the)e(Message)683 355 y(P)n(assing)i(In)n
(terface)802 503 y Fm(18:337,)22 b(Lab)c(5)808 620 y(April)g(9,)i(1996)
73 807 y Fl(In)14 b(this)f(lab)h(y)o(ou)f(will)g(learn)g(ho)o(w)h(to)g
(write)f(message-passing)i(parallel)d(programs)i(using)g(MPI.)f(The)0
867 y(program)20 b(will)f(test)h(the)g(e\013ect)g(of)g(partitioning)h
(an)f(unstructured)h(mesh)d(among)j(pro)q(cessors.)34
b(Y)l(ou)0 927 y(are)15 b(resp)q(onsible)g(for)h(writing)f(the)f
(parallel)h(sparse)g(matrix-v)o(ector)e(m)o(ultiplic)o(ation)g
(subroutine.)21 b(Y)l(our)0 988 y(subroutine)16 b(will)g(b)q(e)g(used)g
(in)g(t)o(w)o(o)g(applications:)73 1102 y Fk(\017)24
b Fj(Iterativ)n(e)16 b(Sparse)i(Linear)e(Solv)n(er)p
Fl(:)k(The)c(conjugate)g(gradien)o(t)f(metho)q(d)f(is)h(one)h(of)g(the)
f(most)122 1162 y(e\016cien)o(t)22 b(iterativ)o(e)g(solv)o(ers)h(for)h
(symmetri)o(c)d(p)q(ositiv)o(e)i(de\014nite)g(linear)g(systems.)43
b(The)23 b(main)122 1222 y(k)o(ernel)d(of)h(a)h(conjugate)g(gradien)o
(t)f(solv)o(er)g(is)g(the)g(computation)f(of)i(the)f(pro)q(duct)h(of)g
(a)f(sparse)122 1282 y(matrix)16 b(and)j(a)f(v)o(ector.)25
b(Y)l(our)18 b(parallel)g(subroutine)g(will)e(b)q(e)j(used)f(in)f(our)i
(conjugate)f(gradien)o(t)122 1342 y(solv)o(er.)26 b(Y)l(ou)19
b(will)e(p)q(erform)g(some)g(exp)q(erimen)o(ts)f(to)i(ev)m(aluate)g
(the)g(e\016ciency)e(of)j(the)f(partition)122 1403 y(that)j(w)o(e)e(ha)
o(v)o(e)h(generated.)32 b(In)20 b(this)g(application,)h(y)o(ou)f(will)f
(get)h(to)g(try)g(simple)e(metho)q(ds)i(for)122 1463
y(sparse)d(matrix)d(iterativ)o(e)h(metho)q(ds,)g(and)i(more)e(complex)f
(but)i(more)f(e\016cien)o(t)f(metho)q(ds.)73 1565 y Fk(\017)24
b Fj(Sp)r(ectral)18 b(P)n(artitioning)p Fl(:)23 b(As)17
b(an)g(in)o(teresting)f(application)h(of)h(sparse)g(matrix-v)o(ector)c
(m)o(ulti-)122 1625 y(plication,)20 b(y)o(ou)g(will)f(apply)h(y)o(our)g
(program)h(in)e(a)i(simple)d(p)q(o)o(w)o(er)i(metho)q(d)g(that)g(appro)
o(ximate)122 1685 y(the)13 b(second)g(smallest)f(eigen)o(v)m(alue/v)o
(ector)g(of)h(the)g(Laplacian)h(graph)g(of)g(the)f(input)g
(unstructured)122 1745 y(mesh.)22 b(Y)l(ou)17 b(then)f(can)h(\014nd)g
(a)h(bisection)e(of)h(the)g(mesh)e(using)i(the)g(sp)q(ectral)g
(partitioning)g(tec)o(h-)122 1805 y(nique.)122 1946 y
Fj(Remark:)31 b Fl(Practical)22 b(sp)q(ectral)g(partitioning)g(implem)o
(en)o(tations)e(normally)g(do)j(not)g(use)f(the)122 2007
y(p)q(o)o(w)o(er)h(metho)q(d)f(to)h(appro)o(ximate)f(small)f(eigen)o(v)
o(ectors.)39 b(A)23 b(more)e(e\016cien)o(t)g(pro)q(cedure)i(uses)122
2067 y(Lanczos's)h(metho)q(d,)g(whic)o(h)e(con)o(v)o(erges)h(m)o(uc)o
(h)e(faster.)42 b(In)23 b(fact,)i(the)e(core)g(computation)f(in)122
2127 y(Lanczos's)15 b(metho)q(d)f(is)h(also)g(sparse)g(matrix-v)o
(ector)e(m)o(ultipli)o(cation.)18 b(Th)o(us,)d(y)o(our)f(program)h(can)
122 2187 y(also)23 b(b)q(e)g(used)f(as)h(part)g(of)g(a)g(parallel)e
(Lanczos)j(implem)o(en)n(tation.)38 b(Recen)o(tly)l(,)21
b(sev)o(eral)g(more)122 2247 y(e\016cien)o(t)14 b(metho)q(ds)j(ha)o(v)o
(e)e(b)q(een)i(prop)q(osed.)24 b(They)16 b(use)h(the)f(m)o(ulti-lev)n
(el)d(approac)o(h)k(to)g(sp)q(eed-up)122 2308 y(the)f(appro)o
(ximation.)0 2474 y Fi(1)81 b(Getting)28 b(Started.)0
2584 y Fl(First,)12 b(please)h(follo)o(w)f(these)g(steps)h(to)g(login)g
(to)g(the)f(IBM)g(SP2)h(and)h(set)e(up)h(the)f(necessary)h(en)o
(vironmen)o(t)0 2644 y(for)k(doing)f(MPI)g(programming:)963
2795 y(1)p eop
%%Page: 2 2
2 1 bop 60 50 a Fl(1.)24 b(First,)15 b(login)i(to)f(y)o(our)g(athena)h
(accoun)o(t.)60 151 y(2.)24 b(Login)17 b(to)g(the)f(SP2)h(at)f(MIT,)g
(using)g(the)g(telnet)f(command)g(as)h(follo)o(ws:)180
253 y Fk(\017)24 b Fl(telnet)15 b(sp2n9.mit.edu,)180
334 y Fk(\017)24 b Fl(telnet)15 b(sp2n10.mit.edu,)180
415 y Fk(\017)24 b Fl(telnet)15 b(sp2n11.mit.edu,)g(or)180
496 y Fk(\017)24 b Fl(telnet)15 b(sp2n12.mit.edu)60 597
y(3.)24 b(Once)18 b(y)o(ou)h(are)g(logged)h(in)e(to)i(the)e(SP2,)i(cop)
o(y)f(all)f(the)h(\014les)f(from)g Fh(~edelman/la)o(b5)e
Fl(in)o(to)i(y)o(our)122 658 y(directory)d(b)o(y)h(t)o(yping)122
780 y Fh(cp)25 b(~edelman/l)o(ab)o(5/*)d(.)122 902 y
Fl(\(the)16 b(p)q(erio)q(d)h(is)f(part)g(of)h(the)f(command\).)122
983 y(The)g(\014les)g(y)o(ou)h(will)e(get)i(include)e(some)g(source)i
(co)q(de)g(that)g(y)o(ou)f(will)f(mo)q(dify)l(,)g(an)i(executable,)e(a)
122 1043 y(mak)o(e\014le,)e(and)k(some)e(data)i(\014les.)60
1145 y(4.)24 b(The)d(co)q(de)f(in)h Fh(solver)p 564 1145
16 2 v 16 w(incomplete)o(.c)c Fl(is)k(an)g(iterativ)o(e)e(solv)o(er)g
(\(partially)h(completed\))f(for)i(a)122 1205 y(medium)13
b(sized)i(sparse)i(matrix)d(problem)h(\(4253)i(equations)f(and)h(12289)
h(nonzeros\).)k(First,)15 b(run)122 1265 y(the)f(executable)f(that)i(w)
o(e'v)o(e)e(made)g(from)h(a)h(complete)d(v)o(ersion)i(of)g(the)h(co)q
(de.)20 b(T)l(o)c(run)e(this,)h(t)o(yp)q(e)122 1387 y
Fh(poe)24 b(solver)122 1510 y Fl(If)12 b(there)h(is)f(some)g(complain)o
(t)f(ab)q(out)k(\\to)q(o)f(man)o(y)d(pro)q(cessors,")k(t)o(yp)q(e)e
Fh(setenv)23 b(MP_PROCS)g(4)12 b Fl(and)122 1570 y(try)k(again.)122
1651 y(As)j(y)o(ou)f(see,)h(the)g(co)q(de)g(rep)q(orts)g(on)h(the)e
(progress)i(of)f(the)g(iterations,)g(and)g(the)g(time)e(to)i(solv)o(e)
122 1711 y(the)d(problem.)0 1855 y Fg(1.1)66 b(Ab)r(out)23
b(the)f(iterativ)n(e)j(solv)n(er.)0 1948 y Fl(The)14
b(program)g Fh(solver)p 450 1948 V 16 w(incomplete)o(.c)c
Fl(is)k(a)g(message)f(passing)i(program)f(that)g(implem)o(en)o(ts)d(a)j
(simple)0 2008 y(iterativ)o(e)f(solv)o(er)i(for)h(sparse)f(systems)f
(of)i(linear)f(equations.)21 b(One)15 b(part)g(of)h(the)f(solv)o(er)g
(is)g(missing,)e(and)0 2068 y(y)o(ou)k(will)g(ha)o(v)o(e)f(to)i(\014ll)
f(it)g(in.)24 b(\(It's)17 b(a)h(C)g(program.)25 b(If)17
b(y)o(ou)g(don't)h(kno)o(w)f(C,)g(this)h(is)f(w)o(ould)h(b)q(e)f(a)h
(go)q(o)q(d)0 2128 y(time)c(to)j(learn!)k(T)l(eam)15
b(up)h(with)g(another)h(studen)o(t)f(who)h(do)q(es.\))73
2188 y(The)f(program)g(implem)o(en)n(ts)e(an)i(iterativ)o(e)e
(conjugate)j(gradien)o(t)e(solv)o(er.)21 b(The)16 b(conjugate)g
(gradien)o(t)0 2249 y(algorithm)k(\014nds)h(the)g(solution)g
Ff(x)g Fl(of)g(a)g(linear)f(system)f Ff(Ax)i Fl(=)h Ff(b)f
Fl(using)g(three)f(t)o(yp)q(es)h(of)g(op)q(erations)0
2309 y(in)c(ev)o(ery)f(iteration:)24 b(m)o(ultiplyi)o(ng)15
b(a)j(v)o(ector)f Ff(p)h Fl(b)o(y)f(the)g(matrix)f Ff(A)p
Fl(,)h(computing)g(dot)h(pro)q(ducts)g(of)g(t)o(w)o(o)0
2369 y(v)o(ectors,)d(and)i(computing)e(linear)h(com)o(binations)f(of)h
(v)o(ectors.)73 2429 y(The)g(matrix)e Ff(A)i Fl(that)g(w)o(e)g(use)g
(is)g(the)g(Laplacian)g(matrix)f(of)h(a)g(certain)g(undirected)f(graph)
i(plus)f(an)0 2489 y(iden)o(tit)o(y)11 b(matrix.)19 b(F)l(or)13
b(ev)o(ery)e(edge)i(\()p Ff(i;)8 b(j)s Fl(\))13 b(in)g(the)g(graph,)h
(the)f(corresp)q(onding)h(elemen)o(t)c Ff(A)1673 2496
y Fe(ij)1717 2489 y Fl(=)k Fk(\000)p Fl(1.)20 b(The)0
2550 y(other)c(o\013-diagonal)h(elemen)o(ts)c(of)j Ff(A)f
Fl(are)g(all)g(zero.)21 b(Since)15 b(the)g(graph)h(is)g(undirected,)e
Ff(A)h Fl(is)g(symmetric)o(.)0 2610 y(Eac)o(h)i(diagonal)h(elemen)o(t)c
(is)j(equal)g(to)g(1)g(plus)h(the)e(n)o(um)o(b)q(er)g(of)h(nonzero)g
(elemen)o(ts)e(in)i(that)g(ro)o(w.)24 b(The)0 2670 y(program)19
b(reads)h(the)f(matrix)f(from)g(a)i(\014le)e(that)i(con)o(tains)g(the)f
(n)o(um)o(b)q(er)e(of)j(edges)f(of)h(the)f(graph)h(and)963
2795 y(2)p eop
%%Page: 3 3
3 2 bop 0 50 a Fl(then)14 b(the)g(list)g(of)g(\()p Ff(i;)8
b(j)s Fl(\))14 b(pairs)h(de\014ning)f(the)g(edges,)g(whic)o(h)g
(determines)e(the)i(lo)q(cations)h(of)f(the)g(nonzeros)0
110 y(of)j Ff(A)p Fl(.)73 170 y(T)l(o)22 b(test)e(the)h
(conjugate-gradien)o(t)g(solv)o(er,)g(the)f(program)h(generates)g(a)g
(righ)o(t)f(hand)i(side)e Ff(b)p Fl(,)h(and)0 230 y(uses)c(the)f(zero)f
(v)o(ector)h(for)g(the)g(initial)f(guess)i Ff(x)f Fl(in)g(the)g
(iterativ)o(e)e(algorithm.)73 291 y(The)f(approac)o(h)h(to)f
(parallelism)d(here)i(is)h(to)g(partition)g(the)g(graph)g(and)h(map)e
(the)g(subsets)i(of)f(v)o(ertices)0 351 y(to)i(the)g(pro)q(cessors.)22
b(The)15 b(elemen)o(ts)e(of)i(all)g(v)o(ectors)f(and)i(the)f(ro)o(ws)g
(of)g Ff(A)g Fl(that)h(corresp)q(ond)g(to)f(a)h(v)o(ertex)0
411 y(subset)g(are)h(mapp)q(ed)e(to)h(the)g(same)f(pro)q(cessor)i(as)g
(that)g(subset;)f(so,)g(ev)o(ery)f(pro)q(cessor)i(stores)f(a)h(subset)0
471 y(of)k(the)e(elemen)o(ts)f(of)i(eac)o(h)g(v)o(ector)f(and)i(the)f
(corresp)q(onding)h(ro)o(ws)g(of)g Ff(A)p Fl(.)32 b(A)20
b(go)q(o)q(d)i(mapping)e(of)g(the)0 531 y(graph)g(of)e(the)h(matrix)e
(on)o(to)i(16)g(pro)q(cessors,)h(computed)e(using)h(Matlab's)f
(Geometric)e(T)l(o)q(olb)q(o)o(x,)k(has)0 592 y(b)q(een)c(stored)g(in)g
(the)g(\014le)f Fh(airfoil)p 665 592 16 2 v 16 w(map.p16)p
Fl(.)k(The)d(program)f(reads)i(in)f(this)f(mapping,)g(and)i(mo)q
(di\014es)0 652 y(it)f(for)h(the)f(n)o(um)o(b)q(er)e(of)j(pro)q
(cessors)h(actually)d(b)q(eing)i(used.)22 b(The)16 b(solv)o(er)f(also)i
(has)h(the)e(abilit)o(y)e(to)j(use)g(a)0 712 y(random)h(mapping)f(of)h
(the)g(graph.)27 b(Y)l(ou)18 b(can)h(sp)q(ecify)e(the)h(partition)g(b)o
(y)f(giving)h(the)g(program)f(a)i(run)0 772 y(time)14
b(argumen)o(t)h Fh(PARTITION)p 566 772 V 15 w(FROM)p
685 772 V 17 w(FILE)g Fl(\(the)h(default\))g(or)h Fh(PARTITION)p
1400 772 V 15 w(RANDOM)p Fl(.)c(F)l(or)k(example)0 874
y Fh(poe)25 b(solver)e(PARTITION_)o(RAN)o(DO)o(M)0 1040
y Fi(2)81 b(Matrix-V)-7 b(ector)27 b(Multiplication)d(with)j
(Allgatherv)0 1150 y Fl(Since)19 b(ours)i(is)g(a)f(Laplacian)h(matrix,)
e(when)i(a)g(pro)q(cessor)g(computes)e(its)h(elemen)o(ts)e(of)i
Ff(Ax)p Fl(,)h(it)e(m)o(ust)0 1210 y(m)o(ultiply)13 b(eac)o(h)j(of)g
(its)g(v)o(ector)f(elemen)o(ts)f Ff(x)802 1217 y Fe(i)832
1210 y Fl(b)o(y)h(the)h(corresp)q(onding)i(diagonal)f(elemen)o(t)c
Ff(A)1709 1217 y Fe(i;i)1760 1210 y Fl(and)k(then)0 1270
y(subtract)j Ff(x)224 1277 y Fe(j)261 1270 y Fl(for)g(eac)o(h)f(of)h
(the)f(neigh)o(b)q(oring)h(v)o(ertices)e Ff(j)s Fl(,)h(that)h(is)g(for)
f(eac)o(h)g Ff(j)k Fl(suc)o(h)c(that)h Ff(A)1757 1277
y Fe(i;j)1816 1270 y Fl(=)f Fk(\000)p Fl(1.)0 1330 y(Some)c(of)i(these)
f(neigh)o(b)q(oring)g Ff(x)604 1337 y Fe(j)638 1330 y
Fl(v)m(alues)h(ma)o(y)d(b)q(elong)j(to)g(other)f(pro)q(cessors.)73
1390 y(The)22 b(program)h(is)f(missing)f(the)h(co)q(de)g(for)h
(matrix-v)o(ector)d(m)o(ultipli)o(cation.)37 b(Y)l(ou)22
b(should)h(\014ll)e(in)0 1451 y(the)15 b(co)q(de)h(for)f(the)h
(subroutine)f Fd(multiply)p 757 1451 15 2 v 19 w(b)o(y)p
822 1451 V 17 w(A)p 871 1451 V 18 w(allgatherv)i Fl(whic)o(h)d(m)o
(ultiplies)e(a)k(giv)o(en)f(v)o(ector)f Ff(x)h Fl(b)o(y)g(the)0
1511 y(matrix)e Ff(A)p Fl(.)20 b(Computing)15 b(the)f(elemen)o(ts)f(of)
i Ff(Ax)f Fl(that)h(b)q(elong)h(to)f(a)g(pro)q(cessor)h(requires)e
(some)g(elemen)o(ts)0 1571 y(of)i Ff(x)g Fl(that)g(b)q(elong)g(to)h
(other)e(pro)q(cessors.)23 b(Y)l(ou)16 b(should)g(implem)o(en)n(t)d
(the)j(subroutine)g(b)o(y)f(collecting)g(all)0 1631 y(of)i(the)f(v)o
(ector)f Ff(x)h Fl(on)h(all)e(the)h(pro)q(cessors)i(using)e(the)g(MPI)g
(subroutine)h Fd(MPI)p 1436 1631 V 18 w(Allgatherv)p
Fl(.)73 1691 y(Here)i(is)g(what)h(y)o(ou)g(need)f(to)h(kno)o(w)g(ab)q
(out)h(the)e(data)i(structures)e(that)h(the)f(program)h(uses.)32
b(See)0 1752 y(Figure)16 b(1)g(for)h(an)g(illustration.)73
1853 y Fk(\017)24 b Fl(The)c(global)g(in)o(ts)f Fc(npr)n(o)n(cs)g
Fl(and)i Fc(my)p 791 1853 V 17 w(r)n(ank)f Fl(are)g(the)g(n)o(um)o(b)q
(er)e(of)i(pro)q(cessors)h(and)f(the)g(pro)q(cessor)122
1914 y(n)o(um)o(b)q(er)15 b(of)i(the)f(pro)q(cessor)i(the)e(co)q(de)h
(is)g(running)g(on.)23 b(Lo)q(ok)18 b(for)f(the)f(calls)h(to)g
Fd(MPI)p 1712 1914 V 18 w(Comm)p 1863 1914 V 17 w(size)122
1974 y Fl(and)g Fd(MPI)p 306 1974 V 18 w(Comm)p 457 1974
V 17 w(rank)f Fl(that)h(compute)e(these)g(v)m(alues.)73
2075 y Fk(\017)24 b Fl(The)16 b(n)o(um)o(b)q(er)f(of)h(v)o(ector)g
(elemen)o(t)o(s)e(in)i(eac)o(h)g(pro)q(cessor)h(is)f(stored)h(in)e
Fc(my)p 1500 2075 V 18 w(numb)n(er)p 1674 2075 V 18 w(of)p
1732 2075 V 18 w(vertic)n(es)p Fl(.)73 2177 y Fk(\017)24
b Fl(The)18 b(diagonal)i(elemen)o(ts)c(that)j(corresp)q(ond)g(to)g(the)
f(v)o(ector)g(section)g(o)o(wned)h(b)o(y)f(the)g(pro)q(cessor)122
2237 y(are)e(stored)h(in)f(an)g(arra)o(y)h(of)f(doubles)h(called)e
Fc(D)p Fl(.)73 2339 y Fk(\017)24 b Fl(The)16 b(ro)o(ws)h(of)f
Ff(A)g Fl(are)h(stored)f(in)g(an)h(arra)o(y)l(,)f(called)f
Fc(my)p 1138 2339 V 17 w(vertic)n(es)p Fl(,)i(of)f Fc(V)l(ertex)p
Fl(structures.)73 2441 y Fk(\017)24 b Fl(Eac)o(h)g Fc(V)l(ertex)h
Fl(structure)f(con)o(tains)g(a)g Fc(V)l(ertexId)h Fl(structure)f(that)g
(sp)q(eci\014es)f(the)h(global)g(lab)q(el)122 2501 y(\(name\))10
b(of)j(that)f(ro)o(w,)g(the)g(pro)q(cessor)g(that)h(o)o(wns)f(it,)g
(and)g(the)g(index)f(of)h(that)g(ro)o(w)g(in)f Fc(my)p
1763 2501 V 18 w(vertic)n(es)p Fl(.)122 2561 y(The)g(ro)o(w)g
(structure)f(also)i(con)o(tains)f(the)f(n)o(um)o(b)q(er)f(of)j(nonzero)
f(elemen)o(ts)d(in)i(the)h(ro)o(w)g(\(neigh)o(b)q(ors)g(in)122
2621 y(the)i(underlying)f(graph\),)i(and)f(an)h(arra)o(y)f(of)g(neigh)o
(b)q(ors,)h(eac)o(h)e(of)h(whic)o(h)g(is)f(a)i Fc(V)l(ertexId)g
Fl(structure.)963 2795 y(3)p eop
%%Page: 4 4
4 3 bop 338 529 a
 20129214 23681433 3486433 12564316 34732769 49270538 startTexFig
 338 529 a
%%BeginDocument: lab3fig.eps
/MAV 300 dict def
MAV begin 
/useClip true def 
/top    0 def 
/left   1 def 
/bottom 2 def 
/right  3 def 
/CM     6 array def 
/CTM    6 array def 
/CTMR   6 array def 
/MTC    6 array def 
/blimit 1500 def 
/bcnt   0 def 
/rbox 8 array def 
/segbox 8 array def 
/bbox1 4 array def 
/c1 3 array def 
/c2 3 array def 
/d 3 array def    
/delta 3 array def 
/mycurrentrgbcolor 3 array def 
/ulx 0 def 
/uly 1 def 
/llx 2 def 
/lly 3 def 
/urx 4 def 
/ury 5 def 
/lrx 6 def 
/lry 7 def 
/sp [0 0] def 
/ep [0 0] def 
/bbox 4 array def 
/pbox 4 array def 
/scrnProc currentscreen 3 1 roll pop pop def
/currentcolorscreen where {
begin
currentcolorscreen
end
3 1 roll pop pop 
4 2 roll pop pop 
5 -2 roll pop pop 
6 -2 roll pop pop 
/kProc exch def 
/bProc exch def 
/gProc exch def 
/rProc exch def 
} if 
/Max {2 copy gt {pop}{exch pop} ifelse} bind def
/Min {2 copy lt {pop}{exch pop} ifelse} bind def
/cellPenW 72.0 /currentcolorscreen where
{begin currentcolorscreen end pop pop
10 1 roll pop pop 8 1 roll pop pop
 6 1 roll pop pop Max Max Max }
{currentscreen pop pop} ifelse div 2.0 div def
/rect { 
 /saveobj save def 
 R PC PF LC SS 
 saveobj restore 
} bind def 
/R { 
 newpath
 pbox astore pop
 0 792 translate 1 -1 scale CTMR currentmatrix pop exch translate
 /objectCord mstore def
 pbox right get 2 div
 dup pbox left get exch sub
 pbox left 3 -1 roll put 
 dup pbox right 3 -1 roll put
 pbox bottom get 2 div 
 dup pbox top get exch sub
 pbox top 3 -1 roll put
 dup pbox bottom 3 -1 roll put
 translate 
 CTM currentmatrix pop
 57.3 mul rotate
 RT
} bind def
 /SaveScreenBW {
 currentscreen
 /scrnProc exch def
 /scrnAngle exch def
 /scrnFreq exch def
 } bind def
 /RestoreScreenBW {
 scrnFreq scrnAngle MAV /scrnProc get setscreen
 } bind def
 /SetFreqAngleBW {
 currentscreen
 3 1 roll
 pop pop
 setscreen
 } bind def
 /SaveScreenColor {
 currentcolorscreen
 /grayProc exch def
 /grayAngle exch def
 /grayFreq exch def
 /bProc exch def
 /bAngle exch def
 /bFreq exch def
 /gProc exch def
 /gAngle exch def
 /gFreq exch def
 /rProc exch def
 /rAngle exch def
 /rFreq exch def
 } bind def
 /RestoreColorScreen {
 rFreq rAngle MAV /rProc get gFreq gAngle MAV /gProc get bFreq bAngle MAV /bProc get grayFreq grayAngle MAV /grayProc get setcolorscreen
 } bind def
 /SetFreqAngleColor { 
 currentcolorscreen 
 3 1 roll pop pop
 4 2 roll pop pop
 5 -2 roll pop pop
 6 -2 roll pop pop
 4 1 roll 
 6 1 roll 
 8 1 roll 
 10 1 roll 
 setcolorscreen 
 } bind def 
/initmsaverestore { 
userdict begin 
/mdict 10 dict def 
mdict begin 
/mindex -1 def 
/mstacksize 25 def 
/mstack mstacksize array def 
/incmindex { 
/mindex mindex 1 add def 
} bind def 
/decmindex { 
/mindex mindex 1 sub def 
} bind def 
/checkmindex { 
mindex 0 lt { 
(%ERROR: msave/mrestore stack underflow: Offending command 'mrestore'
) print flush 
stop 
} 
{ 
mindex mstacksize ge { 
(%ERROR: msave/mrestore stack overflow: Offending command 'msave'
) print flush 
stop 
} if 
} ifelse 
} bind def 
/mpush { 
incmindex 
checkmindex 
mstack mindex 
3 -1 roll put 
} bind def 
/mpop { 
checkmindex 
mstack mindex get 
decmindex 
} bind def 
end 
end 
} bind def 
/msave { 
mdict begin 
matrix currentmatrix mpush 
end 
} bind def 
/mrestore { 
mdict begin 
mpop setmatrix 
end 
} bind def 
/msavelevel { 
mdict begin 
mindex 1 add 
end 
} bind def 
/mstore {
matrix currentmatrix
} bind def
/AutoSizeY {
0 0 pl
dup 3 1 roll
4 -1 roll  
add
pl exch pop
exch sub
} bind def
/pl {  
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} bind def
/pll {
transform
round exch
round exch
itransform
} bind def
/pr { 
dtransform
round exch
round exch
idtransform
} bind def
/m { 
pl  moveto
} bind def
/l { 
pl lineto
} bind def
/c { 
pl curveto
} bind def
/rm { 
pr rmoveto
} bind def
/rl { 
pr rlineto
} bind def
/ar { 
5 -2 roll pl
5 2 roll
arc
} bind def
/an { 
5 -2 roll pl
5 2 roll
arcn
} bind def
/MakePatternFont {
/FontDict 20 dict def
FontDict begin
/FontName exch def
/Encoding exch def
/FontMatrix [1 0 0 1 0 0 ] def
/FontType 3 def
/FontBBox [ 0 0 1 1 ] def
/PatternDict exch def
/RenderPattern {
patternDict exch get
exec
} bind def
/BuildChar {
exch begin
1 0 0 0 1 1 setcachedevice
Encoding exch get RenderPattern
end
} bind def
FontName FontDict definefont pop
end
} bind def
/SnapToPattenGrid
	{
	exch
	dup 0 lt {
		1 index sub
	} if
	1 index
	div truncate
	mul
} bind def
/FillPatternString {
dup length
1 sub
0 1 3 -1 roll {
2 index
2 index
3 -2 roll
put
} for
pop pop
} bind def
/AutoSizeY {
	0.0 exch dtransform
	round
	idtransform exch pop
} bind def
 /AutoSizeX {
	0.0 dtransform
	exch
	round
	exch
	idtransform pop
} bind def 
/AutoCellSize {
	AutoSizeY
	exch
	AutoSizeX
	exch
} bind def
/CheckPath {
	false
	{ pop pop pop true exit}
	{ pop pop pop true exit}
	{ pop pop pop pop pop pop pop true exit}
	{ pop true exit}
	pathforall
} bind def
/PatternFill {					%		patternCharacter
	/patternString 1 string def
	/cm mstore def
	patternMatrix setmatrix
	1 1 AutoCellSize
	dup 0 eq { pop 1} if
	exch
	dup 0 eq { pop 1} if
	exch
	/patternSize exch 24.0 mul def
	/PatternSizeX exch 24.0 mul patternString length mul def
	/flaterror 0 def
	patternString FillPatternString
	gsave
		flaterror 1 add setflat
		flattenpath
		pathbbox
	grestore
	psy add flaterror add psy SnapToPattenGrid
	exch psx add flaterror add psx SnapToPattenGrid
	3 -1 roll flaterror sub psy SnapToPattenGrid
	4 -1 roll flaterror sub psx SnapToPattenGrid
	4 2 roll pll
	4 2 roll pll
	/llxsnap exch def
	/llysnap exch def
	/urxsnap exch def
	/urysnap exch def
	gsave
		useClip true eq {clip}{eoclip} ifelse newpath
		/PatternFont findfont [psx 0.0 0.0 psy 0.0 0.0] makefont setfont
		llysnap patternSize urysnap {
			llxsnap exch moveto
			llxsnap PatternSizeX urxsnap {
				pop
				patternString show
				%currentpoint am
			} for
		} bind for
	grestore
	cm setmatrix
} bind def				%		End 'PatternFill'
/DefaultPatternFont {
	/cm mstore def
	patternMatrix setmatrix
	1 1 AutoCellSize
	dup 0 eq { pop 1} if
	exch
	dup 0 eq { pop 1} if
	exch
	/psy exch iSizeY mul def
	/psx exch iSizeX mul def
	/patternDict 64 dict def
	patternDict begin
		/NotDef {} def
		/LiteDiagLines {
			iSizeX iSizeY false [iSizeX 0.0 0.0 iSizeY -1.0 mul  0.0 iSizeY]
			{pat}
			imagemask
		} bind def
	end
	/CustEncoding 256 array def
	0 255 1 {
		CustEncoding exch /NotDef put
	} bind for
	CustEncoding 65 /LiteDiagLines put
	patternDict CustEncoding /PatternFont MakePatternFont
	/pathSegProc {
		strokepath
		CheckPath {
			65 PatternFill newpath
		} if
	} bind def
	cm setmatrix
} bind def
/XRound {
	dup
	3 -1 roll
	exch mul round
	exch div
} bind def
/RoundMatrix {
	/i 0 def
	dup {
		100000.0 XRound
		1 index
		exch i exch put
		/i i 1 add def
	} forall
} bind def
/GetBoxesRatio {
3 -1 roll sub
7 1 roll
exch sub
6 1 roll
3 -1 roll sub
5 1 roll
exch sub
4 1 roll
3 -1 roll div
3 1 roll
exch div
exch
} bind def
/T {792 exch sub} bind def
/sx 0 def
/sy 0 def
/ex 0 def
/ey 0 def
/lw  0 def
/siz 0 def
/U {gsave 0 setlinecap
/lw siz 0.078125 mul def  /ey exch neg def /ex exch def /sy exch neg def /sx exch def
fontkind plain eq 
 {
  lw siz 0.0119444 mul sub setlinewidth sx sy moveto ex ey lineto stroke
 }
 {
   currentdict /outlineFontSize known outlineFontSize 0 gt and
     {
       fontkind outline eq
         {
           /sy sy 0.0119444 siz mul sub def
           /ey ey 0.0119444 siz mul sub def
           gsave 
           1 1 1 setrgbcolor lw siz 0.0119444 mul sub setlinewidth sx sy moveto ex ey lineto stroke
           grestore
           lw siz 0.0119444 mul sub setlinewidth sx sy moveto ex ey lineto
           strokepath 0.0119444 siz mul setlinewidth stroke
         } if
       fontkind shadow eq fontkind outlineshadow eq or
         {
           /sy sy 0.0358332 siz mul sub def
           /ey ey 0.0358332 siz mul sub def
           lw setlinewidth
           lw 2 div sx add sy
           lw 2 div sub moveto
           lw 2 div ex add ey
           lw 2 div sub lineto stroke 
           gsave
           1 1 1 setrgbcolor lw siz 0.0119444 mul sub setlinewidth sx sy moveto ex ey lineto stroke
           grestore
           lw siz 0.0119444 mul sub setlinewidth sx sy moveto ex ey lineto
           strokepath 0.0119444 siz mul setlinewidth stroke
         } if
      } if
 } ifelse
grestore} bind def
/plain 1 def
/outline 2 def
/shadow 3 def
/outlineshadow 4 def
/fess {
	currentdict /outlineFontSize known {
		/outlineFontSize 2 index def
	} if
	findfont exch dup /siz exch def scalefont setfont
} bind def
/SHDW {gsave siz oldfontname fess siz 0.055 mul x add y siz 0.05 mul sub moveto c show grestore} def
/NRML {gsave 1 1 1 setrgbcolor siz oldfontname fess x y moveto c show grestore siz /Outline fess  x y moveto c show} def
/S {
fontkind plain eq {neg moveto show} if
fontkind outline eq {neg /y exch def /x exch def /c exch def NRML} if
fontkind shadow eq {neg /y exch def /x exch def /c exch def SHDW NRML} if
fontkind outlineshadow eq {neg /y exch def /x exch def /c exch def SHDW NRML} if
} bind def
/F {
/fontkind exch def
fontkind plain eq {fess} if
fontkind outline eq {dup /oldfontname exch def exch dup /siz exch def exch OLF} if
fontkind shadow eq {dup /oldfontname exch def exch dup /siz exch def exch OLF} if
fontkind outlineshadow eq {dup /oldfontname exch def exch dup /siz exch def exch OLF} if
} bind def
/makeoutlinedict 15 dict def
/makeoutlinefont
 {
  makeoutlinedict begin
   /uniqueid exch def
   /strokewidth exch def
   /newfontname exch def
   /basefontname exch def
   FontDirectory basefontname known not {
    /basefontname /Times-Roman def
   } if
   /basefontdict basefontname findfont def
   /numentries basefontdict maxlength 1 add def
   basefontdict /UniqueID known not
   {/numentries numentries 1 add def} if
   /outfontdict numentries dict def
   basefontdict
   {
     exch dup /FID ne {exch outfontdict 3 1 roll put} {pop pop} ifelse
	  }forall
   outfontdict /FontName newfontname put
   outfontdict /PaintType 2 put
   outfontdict /StrokeWidth strokewidth put
   outfontdict /UniqueID uniqueid put
   newfontname outfontdict definefont pop
  end
  }def
/UID {
 findfont dup /UniqueID known
  {/UniqueID get 1 add}
  {pop 1}
  ifelse
} def
/OLF {
dup
/Outline
1000 62 div
4 -1 roll
UID
/outlineFontSize 5 index def
makeoutlinefont
/Outline findfont exch scalefont setfont
} def
/CopyEncoding {
findfont
/Encoding get
dup length array
/tarrayz exch def
tarrayz 0
3 -1 roll
putinterval
tarrayz
} bind def
/Re-encode {
dup length array copy
/eap 0 def
exch {
dup type /integertype eq {
/eap exch def
} {
1 index
exch
eap exch
put
/eap eap 1 add def
} ifelse
} forall
} bind def
/EncodeFont	{
findfont dup
length dict
begin
{	1 index /FID ne
{ def }
{ pop pop } ifelse
} forall
/FontName exch def
/Encoding exch def
FontName currentdict
end
definefont pop
} bind def
/clip2pathbbox {
	/magicNum linewidth 2 div 1 2 sqrt div mul def
	pathbbox
	/urymn exch magicNum add def
	/urxmn exch magicNum add def
	/llymn exch magicNum sub def
	/llxmn exch magicNum sub def
	newpath llxmn llymn moveto llxmn urymn lineto urxmn urymn lineto urxmn llymn lineto
	closepath clip newpath
} bind def
/Line {
MAV /LC get length 0 ne
{
	gsave
			newpath
			MAV /ArrowType get length 0 eq
			MAV /SD get length 0 eq and
			{2 setlinecap /UseClip {clip2pathbbox} def }
			{0 setlinecap /UseClip {} def } ifelse
			0 792 translate
			1 -1 scale
			CTM currentmatrix pop
			/yStart exch def /xStart exch def /yEnd exch def /xEnd exch def /linewidth exch def
			MAV /ArrowType get length 0 eq xStart xEnd ne yStart yEnd ne and and
			{xStart yStart moveto xEnd yEnd lineto UseClip xStart yStart moveto xEnd yEnd lineto}
			{xStart yStart moveto xEnd yEnd lineto} ifelse
			linewidth setlinewidth SD strokepath
			CheckPath {LC PF ArrowType} if
	grestore
}
{pop pop pop pop pop} ifelse
} bind def
/ZeroLine {
	gsave
		newpath
		MAV /ArrowType get length 0 ne {
			/UseClip {} def
			0 792 translate
			1 -1 scale
			pop pop pop pop pop
			CTM currentmatrix pop
			ArrowType
		} if
	grestore
} bind def
/CompensateForStroke {
	sin currentlinewidth mul
	exch
	cos currentlinewidth mul
	dup 0 translate
	4 -1 roll exch 2.0 mul sub
	3 1 roll
	2.0 mul sub
} bind def
/arrowdict 10 dict def
arrowdict begin
	/SwallowTail {
		newpath
		0.0 0.0 moveto
		1.0 -.5 lineto
		.666 0.0 lineto
		1.0 .5 lineto
		closepath
	} bind def
	/Triangular {
		newpath
		0.0 0.0 moveto
		1.0 -.5 lineto
		1.0 .5 lineto
		closepath
	} bind def
	/OpenTri {
		newpath
		1.0 0.5 moveto
		0.0 0.0 lineto
		1.0 -0.5 lineto
	} bind def
	/ClosedTri {
		newpath
		1.0 0.5 moveto
		0.0 0.0 lineto
		1.0 -0.5 lineto
		closepath
	} bind def
	/SlashBar {
		newpath
		0.5 -.5 moveto
		-.5 0.5 lineto
	} bind def
	/Dot {
		newpath
		0.5 0.0 moveto
		0 0 1 0 360 arc
		closepath
	} bind def
	/ExtSlashBar {
		newpath
		1.0 -.5 moveto
		0.0 0.5 lineto
	} bind def
end
/ScaleArrowHead {
	0 0 4 -2 roll
	0 0 1 1
	8 -4 roll GetBoxesRatio
	scale
} bind def
/DrawArrowHead {
	gsave
	[] 0 setdash
	currentpoint translate rotate
	{
		4 copy
		gsave
			initmatrix
			100 200 translate
			msave
				ScaleArrowHead pop
				arrowdict exch get exec
			mrestore
			strokepath
			0 0 3 index 3 index
			pathbbox 8 4 roll
			GetBoxesRatio
			4 2 roll
		grestore
		3 index 1.0 exch sub
		6 -1 roll
		{
			2 index mul
			0 translate
		}{
			pop
		} ifelse
		msave
			ScaleArrowHead scale
			arrowdict exch get exec
		mrestore
		strokepath
	} {
		msave
		ScaleArrowHead
		arrowdict exch get exec
		mrestore
	} ifelse
		CheckPath {
			LC PF
		} if
	grestore
} bind def
/SR { 
 pbox left get pbox top get moveto 
 pbox right get pbox top get lineto 
 pbox right get pbox bottom get lineto 
 pbox left get pbox bottom get lineto 
 closepath
} bind def 
/E {
1.415 setmiterlimit
CM currentmatrix pop
pbox right get pbox left get sub abs dup
pbox bottom get pbox top get sub abs dup 3 -1 roll
lt {exch dup 3 -1 roll exch div 1 exch}
{dup 3 -1 roll exch div 1} ifelse scale 
0 0 3 -1 roll 2 div 0 360 arc closepath
CM setmatrix
} bind def
/StripFromFront { 
dup length
2 index sub
3 1 roll
exch 3 -1 roll
getinterval
} bind def
/MakePathArray { 
 /k 0 def 
 {/k k 1 add def pop pop}{/k k 1 add def pop pop}{/k k 1 add def pop pop pop pop pop pop}{/k k 1 add def }pathforall 
 k array
 /k 0 def 
 {{moveto} 3 array astore 1 index k 3 -1 roll put /k k 1 add def} 
 {{lineto} 3 array astore 1 index k 3 -1 roll put /k k 1 add def} 
 {{curveto} 7 array astore 1 index k 3 -1 roll put /k k 1 add def} 
 {{closepath} 1 array astore 1 index k 3 -1 roll put /k k 1 add def} 
pathforall 
}bind def 
/MakeFlatPathArray { 
/k 0 def 
{/k k 1 add def pop pop}{/k k 1 add def pop pop}{pop pop pop pop pop pop}{}pathforall 
k array
/k 0 def 
{{moveto} 3 array astore 1 index k 3 -1 roll put /k k 1 add def} 
{{lineto} 3 array astore 1 index k 3 -1 roll put /k k 1 add def} 
{ pop pop pop pop pop pop} 
{} 
pathforall 
}bind def 
/FractionalLine {
2 index sub
.00001 mul
exch
3 index sub
.00001 mul
4 -1 roll add
3 1 roll
add
} bind def
/calcLineLength {
 exch
 4 -1 roll
 sub
 dup mul
 3 1 roll exch
 sub
 dup mul
 add sqrt
} bind def
/InitTotalLineLength {
 /oldY exch def
 /oldX exch def
 theDash aload pop currentLineLength add setdash
} bind def
/AccumeLineLength {
 3 copy pop
 2 copy
 oldX oldY
 4 2 roll calcLineLength
 /segmentLength exch def
 /currentLineLength currentLineLength segmentLength add def
 /oldY exch def
 /oldX exch def
} bind def
/DecumeLastLineLength {
 /currentLineLength currentLineLength segmentLength sub def
} bind def
/DrawFlattendSegment {
 /pointCount 2 def
 dup 0 lt { pop 0 } if
 fpc
 3 1 roll
 2 index
 1 index
 gt {
 2 copy get
 dup length
 dup 3 eq {
 pop
 dup 0 get
 exch 1 get
 2 copy InitTotalLineLength  
 m
 } {
 } ifelse
 } {
 pop 1 index
 } ifelse
 dup 1 add
 3 index
 exch sub
 dup 10 gt { pop 10} if
 {
 1 add
 2 copy
 get aload pop
 AccumeLineLength
 exec
 } repeat
 3 1 roll pop pop
 DecumeLastLineLength
} bind def
/IncFPC {
 fpc add
 /fpc exch def
} bind def
/DrawFlatPathArray {
 fpc
 0 { 
 dup 2 index
 1 sub
 lt { 
 flatPathArray exch
 newpath
 1 sub DrawFlattendSegment
 gsave
 pathSegProc
 grestore
 newpath
 }
 {
 pop pop
 exit
 } ifelse
 } loop
} bind def
/RecordFirstSubSegment {
 closepathArray 0 pathArray 0 get
 put
 closepathArray 1
 pathArray 0 get aload pop pop
 pathArray 1 get dup length 3 eq {
 aload pop pop
 } {
 newpath
 0 0 moveto
 aload pop exec
 /segmentArray flattenpath MakeFlatPathArray def
 segmentArray 1 get aload pop pop
 } ifelse
 FractionalLine {lineto} 3 array astore
 put
} bind def
/AppendClosePath {
 closepathArray 0 get 2 {lineto} put
 flatPathArray fpc closepathArray 0 get put
 1 IncFPC
 flatPathArray fpc closepathArray 1 get put
 1 IncFPC
} bind def
/RecordCurrentDash {
 /theDash
 currentdash 2 array astore def
 /currentLineLength 0 def
} bind def
/PatternStroke {
	0 setlinecap
 RecordCurrentDash
 /saveFlat currentflat def
 .5 setflat
 /pathArray MakePathArray def
 /closepathArray 2 array def
 /pathLength pathArray length def
 /flatPathArray 513 array def
 /currentLineLength 0 def
 /fpc 0 def
 pathArray pathLength 1 sub get
 length 1 eq {
 /usingClosepath true def
 RecordFirstSubSegment
 /pathLength pathLength 1 sub def
 } {
 /usingClosepath false def
 } ifelse
 0 1 pathLength 1 sub {
 pathArray exch get
 dup length 3 eq {
 fpc 1 add 512 ge {
 DrawFlatPathArray
 fpc 2 ge {
 flatPathArray flatPathArray fpc 2 sub get 0 put
 flatPathArray flatPathArray fpc 1 sub get 1 put
 /fpc 2 def
 }{
 /fpc 0 def
 } ifelse
 } if
 flatPathArray exch fpc exch put
 1 IncFPC
 } {
 dup length 7 eq {
 newpath
 /nToStrip 0 def
 fpc 1 gt {
 flatPathArray fpc 2 sub get aload pop pop m
 flatPathArray fpc 1 sub get aload pop exec
 /nToStrip 2 def
 } {
 fpc 1 eq {
 flatPathArray fpc 1 sub get aload pop exec
 /nToStrip 2 def
 } if
 } ifelse
 aload pop exec
 /segmentArray flattenpath MakeFlatPathArray def
 /segmentArray nToStrip segmentArray StripFromFront def
 segmentArray length fpc add 512 lt {
 flatPathArray fpc segmentArray putinterval
 segmentArray length IncFPC
 } {
 DrawFlatPathArray
 fpc 1 gt {
 flatPathArray flatPathArray fpc 2 sub get 0 exch put
 flatPathArray flatPathArray fpc 1 sub get 1 exch put
 /fpc 2 def
 }{
 /fpc 0 def
 } ifelse
 segmentArray length 512 lt {
 flatPathArray fpc segmentArray putinterval
 segmentArray length IncFPC
 } {
 segmentArray length
 /exitLoop false def
 0 
 {
 2 copy sub
 dup 500 gt {
 pop 500
 } { 
 /exitLoop true def
 } ifelse 
 segmentArray 2 index 2 index getinterval
 flatPathArray fpc 3 -1 roll putinterval
 dup IncFPC
 add 
 exitLoop {
 exit 
 } {
 DrawFlatPathArray
 fpc 1 gt {
 flatPathArray flatPathArray fpc 2 sub get 0 exch put
 flatPathArray flatPathArray fpc 1 sub get 1 exch put
 /fpc 2 def
 }{
 /fpc 0 def
 } ifelse
 } ifelse
 } loop
 } ifelse
 } ifelse
 } if
 } ifelse
 } for
 fpc 0 gt {
 usingClosepath {
 AppendClosePath
 } if
 DrawFlatPathArray
 } if
 saveFlat setflat
} bind def

initmsaverestore
/tctm matrix currentmatrix def
tctm RoundMatrix setmatrix
/patternMatrix mstore def
10 setmiterlimit
2 setlinecap
newpath
%
%tLayer
%
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 0.000 setcmykcolor end} {1.000 1.000 1.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
1.000 0 465.000 135.000 0.000 0.000 108.000 99.000 rect
%@EndRect
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 0.000 setcmykcolor end} {1.000 1.000 1.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
1.000 0 321.000 135.000 0.000 0.000 72.000 99.000 rect
%@EndRect
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginOval
/RT {E} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 0.000 setcmykcolor end} {1.000 1.000 1.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
2.000 0 108.000 87.000 0.000 0.000 18.000 18.000 rect
%@EndOval
%@BeginText
save
[ 39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron]
StandardEncoding Re-encode /_Times-Roman /Times-Roman EncodeFont

%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
0.000 0 111.000 94.000 0.000 0.000 14.000 6.000 rect
%@EndRect
gsave
97.000 118.000 T translate
0.0 rotate
1 1 scale
12.000 (_Times-Roman) plain F
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(0) -2.500 3.000 S
grestore
%@EndText
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginOval
/RT {E} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 0.000 setcmykcolor end} {1.000 1.000 1.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
2.000 0 144.000 87.000 0.000 0.000 18.000 18.000 rect
%@EndOval
%@BeginText
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
0.000 0 147.000 94.000 0.000 0.000 14.000 6.000 rect
%@EndRect
gsave
97.000 154.000 T translate
0.0 rotate
1 1 scale
12.000 (_Times-Roman) fess
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(4) -2.500 3.000 S
grestore
%@EndText
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginOval
/RT {E} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 0.000 setcmykcolor end} {1.000 1.000 1.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
2.000 0 109.000 132.000 0.000 0.000 18.000 18.000 rect
%@EndOval
%@BeginText
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
0.000 0 112.000 139.000 0.000 0.000 14.000 6.000 rect
%@EndRect
gsave
142.000 119.000 T translate
0.0 rotate
1 1 scale
12.000 (_Times-Roman) fess
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(1) -2.500 3.000 S
grestore
%@EndText
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginOval
/RT {E} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 0.000 setcmykcolor end} {1.000 1.000 1.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
2.000 0 146.000 132.000 0.000 0.000 18.000 18.000 rect
%@EndOval
%@BeginText
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
0.000 0 149.000 139.000 0.000 0.000 14.000 6.000 rect
%@EndRect
gsave
142.000 156.000 T translate
0.0 rotate
1 1 scale
12.000 (_Times-Roman) fess
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(3) -2.500 3.000 S
grestore
%@EndText
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginOval
/RT {E} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 0.000 setcmykcolor end} {1.000 1.000 1.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
2.000 0 129.000 177.000 0.000 0.000 18.000 18.000 rect
%@EndOval
%@BeginText
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
0.000 0 132.000 184.000 0.000 0.000 14.000 6.000 rect
%@EndRect
gsave
187.000 139.000 T translate
0.0 rotate
1 1 scale
12.000 (_Times-Roman) fess
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(2) -2.500 3.000 S
grestore
%@EndText
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 132.000 117.000 105.000 117.000 Line
%@EndLine
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 132.000 117.000 105.000 153.000 Line
%@EndLine
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 96.000 144.000 96.000 126.000 Line
%@EndLine
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 177.000 135.000 150.000 117.000 Line
%@EndLine
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 177.000 135.000 150.000 153.000 Line
%@EndLine
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {[9.000 9.000 ] 0 setdash} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 118.000 189.000 118.000 81.000 Line
%@EndLine
%@BeginText
restore
save
[ 39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron]
StandardEncoding Re-encode /_Times-Bold /Times-Bold EncodeFont

%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
0.000 0 72.000 60.000 0.000 0.000 27.000 55.658 rect
%@EndRect
gsave
87.829 85.500 T translate
0.0 rotate
1 1 scale
12.000 (_Times-Bold) plain F
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(P) -24.658 -4.000 S
(r) -17.328 -4.000 S
(o) -12.001 -4.000 S
(c) -6.001 -4.000 S
(e) -0.675 -4.000 S
(s) 4.650 -4.000 S
(s) 9.320 -4.000 S
(o) 13.990 -4.000 S
(r) 19.990 -4.000 S
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(0) -2.670 9.000 S
grestore
%@EndText
%@BeginText
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
0.000 0 72.000 132.000 0.000 0.000 27.000 55.658 rect
%@EndRect
gsave
159.829 85.500 T translate
0.0 rotate
1 1 scale
12.000 (_Times-Bold) fess
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(P) -24.658 -4.000 S
(r) -17.328 -4.000 S
(o) -12.001 -4.000 S
(c) -6.001 -4.000 S
(e) -0.675 -4.000 S
(s) 4.650 -4.000 S
(s) 9.320 -4.000 S
(o) 13.990 -4.000 S
(r) 19.990 -4.000 S
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(1) -2.670 9.000 S
grestore
%@EndText
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 0.000 setcmykcolor end} {1.000 1.000 1.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
1.000 0 330.000 146.000 0.000 0.000 18.000 36.000 rect
%@EndRect
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 0.000 setcmykcolor end} {1.000 1.000 1.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
1.000 0 366.000 146.000 0.000 0.000 18.000 36.000 rect
%@EndRect
%@BeginText
restore
save
[ 39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron]
StandardEncoding Re-encode /_Times-Roman /Times-Roman EncodeFont

%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
0.000 0 369.000 153.000 0.000 0.000 14.000 24.000 rect
%@EndRect
gsave
165.000 376.000 T translate
0.0 rotate
1 1 scale
12.000 (_Times-Roman) plain F
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(4) -11.500 3.000 S
( ) -5.500 3.000 S
(0) -2.500 3.000 S
( ) 3.500 3.000 S
(1) 6.500 3.000 S
grestore
%@EndText
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 0.000 setcmykcolor end} {1.000 1.000 1.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
1.000 0 474.000 146.000 0.000 0.000 18.000 36.000 rect
%@EndRect
%@BeginText
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
0.000 0 477.000 153.000 0.000 0.000 14.000 24.000 rect
%@EndRect
gsave
165.000 484.000 T translate
0.0 rotate
1 1 scale
12.000 (_Times-Roman) fess
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(2) -11.500 3.000 S
( ) -5.500 3.000 S
(1) -2.500 3.000 S
( ) 3.500 3.000 S
(0) 6.500 3.000 S
grestore
%@EndText
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 0.000 setcmykcolor end} {1.000 1.000 1.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
1.000 0 510.000 146.000 0.000 0.000 18.000 36.000 rect
%@EndRect
%@BeginText
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
0.000 0 513.000 153.000 0.000 0.000 14.000 24.000 rect
%@EndRect
gsave
165.000 520.000 T translate
0.0 rotate
1 1 scale
12.000 (_Times-Roman) fess
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(1) -11.500 3.000 S
( ) -5.500 3.000 S
(1) -2.500 3.000 S
( ) 3.500 3.000 S
(1) 6.500 3.000 S
grestore
%@EndText
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 0.000 setcmykcolor end} {1.000 1.000 1.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
1.000 0 546.000 146.000 0.000 0.000 18.000 36.000 rect
%@EndRect
%@BeginText
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
0.000 0 549.000 153.000 0.000 0.000 14.000 24.000 rect
%@EndRect
gsave
165.000 556.000 T translate
0.0 rotate
1 1 scale
12.000 (_Times-Roman) fess
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(3) -11.500 3.000 S
( ) -5.500 3.000 S
(1) -2.500 3.000 S
( ) 3.500 3.000 S
(2) 6.500 3.000 S
grestore
%@EndText
%@BeginText
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
0.000 0 333.000 198.000 0.000 0.000 14.000 6.000 rect
%@EndRect
gsave
201.000 340.000 T translate
0.0 rotate
1 1 scale
12.000 (_Times-Roman) fess
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(2) -2.500 3.000 S
grestore
%@EndText
%@BeginText
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
0.000 0 369.000 198.000 0.000 0.000 14.000 6.000 rect
%@EndRect
gsave
201.000 376.000 T translate
0.0 rotate
1 1 scale
12.000 (_Times-Roman) fess
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(2) -2.500 3.000 S
grestore
%@EndText
%@BeginText
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
0.000 0 477.000 198.000 0.000 0.000 14.000 6.000 rect
%@EndRect
gsave
201.000 484.000 T translate
0.0 rotate
1 1 scale
12.000 (_Times-Roman) fess
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(2) -2.500 3.000 S
grestore
%@EndText
%@BeginText
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
0.000 0 513.000 198.000 0.000 0.000 14.000 6.000 rect
%@EndRect
gsave
201.000 520.000 T translate
0.0 rotate
1 1 scale
12.000 (_Times-Roman) fess
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(3) -2.500 3.000 S
grestore
%@EndText
%@BeginText
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
0.000 0 549.000 198.000 0.000 0.000 14.000 6.000 rect
%@EndRect
gsave
201.000 556.000 T translate
0.0 rotate
1 1 scale
12.000 (_Times-Roman) fess
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(1) -2.500 3.000 S
grestore
%@EndText
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginOval
/RT {E} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
1.000 0 335.000 216.000 0.000 0.000 9.000 9.000 rect
%@EndOval
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginOval
/RT {E} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
1.000 0 371.000 216.000 0.000 0.000 9.000 9.000 rect
%@EndOval
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginOval
/RT {E} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
1.000 0 479.000 216.000 0.000 0.000 9.000 9.000 rect
%@EndOval
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginOval
/RT {E} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
1.000 0 515.000 216.000 0.000 0.000 9.000 9.000 rect
%@EndOval
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginOval
/RT {E} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
1.000 0 551.000 216.000 0.000 0.000 9.000 9.000 rect
%@EndOval
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ 
1.000 setlinewidth
279.000 339.000 moveto
/Triangular 14.099 7.049 false 180.012 DrawArrowHead
} bind def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 277.000 339.000 225.000 339.000 Line
%@EndLine
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ 
1.000 setlinewidth
279.000 375.000 moveto
/Triangular 14.099 7.049 false 180.012 DrawArrowHead
} bind def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 277.000 375.000 225.000 375.000 Line
%@EndLine
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ 
1.000 setlinewidth
279.000 483.000 moveto
/Triangular 14.099 7.049 false 180.012 DrawArrowHead
} bind def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 277.000 483.000 225.000 483.000 Line
%@EndLine
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ 
1.000 setlinewidth
279.000 519.000 moveto
/Triangular 14.099 7.049 false 180.012 DrawArrowHead
} bind def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 277.000 519.000 225.000 519.000 Line
%@EndLine
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ 
1.000 setlinewidth
279.000 555.000 moveto
/Triangular 14.099 7.049 false 180.012 DrawArrowHead
} bind def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 277.000 555.000 225.000 555.000 Line
%@EndLine
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 234.000 357.000 135.000 357.000 Line
%@EndLine
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 234.000 501.000 135.000 501.000 Line
%@EndLine
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 234.000 537.000 135.000 537.000 Line
%@EndLine
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 0.000 setcmykcolor end} {1.000 1.000 1.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
1.000 0 330.000 279.000 0.000 0.000 18.000 36.000 rect
%@EndRect
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 0.000 setcmykcolor end} {1.000 1.000 1.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
1.000 0 330.000 315.000 0.000 0.000 18.000 36.000 rect
%@EndRect
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 0.000 setcmykcolor end} {1.000 1.000 1.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
1.000 0 366.000 279.000 0.000 0.000 18.000 36.000 rect
%@EndRect
%@BeginText
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
0.000 0 369.000 286.000 0.000 0.000 14.000 24.000 rect
%@EndRect
gsave
298.000 376.000 T translate
0.0 rotate
1 1 scale
12.000 (_Times-Roman) fess
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(0) -11.500 3.000 S
( ) -5.500 3.000 S
(0) -2.500 3.000 S
( ) 3.500 3.000 S
(0) 6.500 3.000 S
grestore
%@EndText
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 0.000 setcmykcolor end} {1.000 1.000 1.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
1.000 0 366.000 315.000 0.000 0.000 18.000 36.000 rect
%@EndRect
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 0.000 setcmykcolor end} {1.000 1.000 1.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
1.000 0 474.000 279.000 0.000 0.000 18.000 36.000 rect
%@EndRect
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 0.000 setcmykcolor end} {1.000 1.000 1.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
1.000 0 474.000 315.000 0.000 0.000 18.000 36.000 rect
%@EndRect
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 0.000 setcmykcolor end} {1.000 1.000 1.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
1.000 0 510.000 279.000 0.000 0.000 18.000 36.000 rect
%@EndRect
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 0.000 setcmykcolor end} {1.000 1.000 1.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
1.000 0 510.000 315.000 0.000 0.000 18.000 36.000 rect
%@EndRect
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 0.000 setcmykcolor end} {1.000 1.000 1.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
1.000 0 510.000 351.000 0.000 0.000 18.000 36.000 rect
%@EndRect
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 0.000 setcmykcolor end} {1.000 1.000 1.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
1.000 0 546.000 279.000 0.000 0.000 18.000 36.000 rect
%@EndRect
%@BeginText
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
0.000 0 333.000 285.000 0.000 0.000 14.000 24.000 rect
%@EndRect
gsave
297.000 340.000 T translate
0.0 rotate
1 1 scale
12.000 (_Times-Roman) fess
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(4) -11.500 3.000 S
( ) -5.500 3.000 S
(0) -2.500 3.000 S
( ) 3.500 3.000 S
(1) 6.500 3.000 S
grestore
%@EndText
%@BeginText
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
0.000 0 333.000 322.000 0.000 0.000 14.000 24.000 rect
%@EndRect
gsave
334.000 340.000 T translate
0.0 rotate
1 1 scale
12.000 (_Times-Roman) fess
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(1) -11.500 3.000 S
( ) -5.500 3.000 S
(1) -2.500 3.000 S
( ) 3.500 3.000 S
(1) 6.500 3.000 S
grestore
%@EndText
%@BeginText
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
0.000 0 333.000 153.000 0.000 0.000 14.000 24.000 rect
%@EndRect
gsave
165.000 340.000 T translate
0.0 rotate
1 1 scale
12.000 (_Times-Roman) fess
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(0) -11.500 3.000 S
( ) -5.500 3.000 S
(0) -2.500 3.000 S
( ) 3.500 3.000 S
(0) 6.500 3.000 S
grestore
%@EndText
%@BeginText
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
0.000 0 369.000 322.000 0.000 0.000 14.000 24.000 rect
%@EndRect
gsave
334.000 376.000 T translate
0.0 rotate
1 1 scale
12.000 (_Times-Roman) fess
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(1) -11.500 3.000 S
( ) -5.500 3.000 S
(1) -2.500 3.000 S
( ) 3.500 3.000 S
(1) 6.500 3.000 S
grestore
%@EndText
%@BeginText
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
0.000 0 513.000 286.000 0.000 0.000 14.000 24.000 rect
%@EndRect
gsave
298.000 520.000 T translate
0.0 rotate
1 1 scale
12.000 (_Times-Roman) fess
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(0) -11.500 3.000 S
( ) -5.500 3.000 S
(0) -2.500 3.000 S
( ) 3.500 3.000 S
(0) 6.500 3.000 S
grestore
%@EndText
%@BeginText
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
0.000 0 513.000 322.000 0.000 0.000 14.000 24.000 rect
%@EndRect
gsave
334.000 520.000 T translate
0.0 rotate
1 1 scale
12.000 (_Times-Roman) fess
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(2) -11.500 3.000 S
( ) -5.500 3.000 S
(1) -2.500 3.000 S
( ) 3.500 3.000 S
(0) 6.500 3.000 S
grestore
%@EndText
%@BeginText
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
0.000 0 477.000 286.000 0.000 0.000 14.000 24.000 rect
%@EndRect
gsave
298.000 484.000 T translate
0.0 rotate
1 1 scale
12.000 (_Times-Roman) fess
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(3) -11.500 3.000 S
( ) -5.500 3.000 S
(1) -2.500 3.000 S
( ) 3.500 3.000 S
(2) 6.500 3.000 S
grestore
%@EndText
%@BeginText
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
0.000 0 549.000 286.000 0.000 0.000 14.000 24.000 rect
%@EndRect
gsave
298.000 556.000 T translate
0.0 rotate
1 1 scale
12.000 (_Times-Roman) fess
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(2) -11.500 3.000 S
( ) -5.500 3.000 S
(1) -2.500 3.000 S
( ) 3.500 3.000 S
(0) 6.500 3.000 S
grestore
%@EndText
%@BeginText
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
0.000 0 477.000 322.000 0.000 0.000 14.000 24.000 rect
%@EndRect
gsave
334.000 484.000 T translate
0.0 rotate
1 1 scale
12.000 (_Times-Roman) fess
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(1) -11.500 3.000 S
( ) -5.500 3.000 S
(1) -2.500 3.000 S
( ) 3.500 3.000 S
(1) 6.500 3.000 S
grestore
%@EndText
%@BeginText
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
0.000 0 513.000 358.000 0.000 0.000 14.000 24.000 rect
%@EndRect
gsave
370.000 520.000 T translate
0.0 rotate
1 1 scale
12.000 (_Times-Roman) fess
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(4) -11.500 3.000 S
( ) -5.500 3.000 S
(0) -2.500 3.000 S
( ) 3.500 3.000 S
(1) 6.500 3.000 S
grestore
%@EndText
%@BeginText
restore
save
[ 39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron]
StandardEncoding Re-encode /_Times-Italic /Times-Italic EncodeFont

%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
0.000 0 317.000 63.000 0.000 0.000 14.000 63.266 rect
%@EndRect
gsave
94.633 324.000 T translate
0.0 rotate
1 1 scale
12.000 (_Times-Italic) plain F
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(m) -31.109 3.000 S
(y) -22.443 3.000 S
(_) -17.117 3.000 S
(v) -11.117 3.000 S
(e) -5.791 3.000 S
(r) -0.465 3.000 S
(t) 4.204 3.000 S
(i) 7.538 3.000 S
(c) 10.872 3.000 S
(e) 16.198 3.000 S
(s) 21.525 3.000 S
(:) 26.194 3.000 S
grestore
%@EndText
%@BeginText
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
0.000 0 461.000 63.000 0.000 0.000 14.000 63.266 rect
%@EndRect
gsave
94.633 468.000 T translate
0.0 rotate
1 1 scale
12.000 (_Times-Italic) fess
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(m) -31.109 3.000 S
(y) -22.443 3.000 S
(_) -17.117 3.000 S
(v) -11.117 3.000 S
(e) -5.791 3.000 S
(r) -0.465 3.000 S
(t) 4.204 3.000 S
(i) 7.538 3.000 S
(c) 10.872 3.000 S
(e) 16.198 3.000 S
(s) 21.525 3.000 S
(:) 26.194 3.000 S
grestore
%@EndText
%@BeginText
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
0.000 1.570 300.454 159.545 0.000 0.000 14.000 10.909 rect
%@EndRect
gsave
165.000 307.454 T translate
-90.006  rotate
1 1 scale
12.000 (_Times-Italic) fess
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(i) -4.954 3.000 S
(d) -1.620 3.000 S
grestore
%@EndText
%@BeginText
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
0.000 1.570 253.939 147.060 0.000 0.000 14.000 107.879 rect
%@EndRect
gsave
201.000 260.939 T translate
-90.006  rotate
1 1 scale
12.000 (_Times-Italic) fess
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(n) -53.131 3.000 S
(u) -47.131 3.000 S
(m) -41.131 3.000 S
(b) -32.465 3.000 S
(e) -26.465 3.000 S
(r) -21.139 3.000 S
(_) -16.469 3.000 S
(o) -10.469 3.000 S
(f) -4.469 3.000 S
(_) -1.135 3.000 S
(n) 4.864 3.000 S
(e) 10.864 3.000 S
(i) 16.190 3.000 S
(g) 19.524 3.000 S
(h) 25.524 3.000 S
(b) 31.524 3.000 S
(o) 37.524 3.000 S
(r) 43.524 3.000 S
(s) 48.194 3.000 S
grestore
%@EndText
%@BeginText
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
0.000 1.570 281.941 197.058 0.000 0.000 14.000 49.883 rect
%@EndRect
gsave
222.000 288.941 T translate
-90.006  rotate
1 1 scale
12.000 (_Times-Italic) fess
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(n) -24.133 3.000 S
(e) -18.133 3.000 S
(i) -12.807 3.000 S
(g) -9.473 3.000 S
(h) -3.473 3.000 S
(b) 2.526 3.000 S
(o) 8.526 3.000 S
(r) 14.526 3.000 S
(s) 19.196 3.000 S
grestore
%@EndText
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {[9.000 9.000 ] 0 setdash} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 522.000 441.000 54.000 441.000 Line
%@EndLine
%@BeginText
restore
save
[ 39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron]
StandardEncoding Re-encode /_Times-Bold /Times-Bold EncodeFont

%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
0.000 0 342.000 405.000 0.000 0.000 31.000 122.320 rect
%@EndRect
gsave
466.160 357.500 T translate
0.0 rotate
1 1 scale
14.000 (_Times-Bold) plain F
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(D) -60.500 -4.000 S
(a) -50.389 -4.000 S
(t) -43.389 -4.000 S
(a) -38.727 -4.000 S
( ) -31.727 -4.000 S
(s) -28.227 -4.000 S
(t) -22.779 -4.000 S
(r) -18.117 -4.000 S
(u) -11.903 -4.000 S
(c) -4.117 -4.000 S
(t) 2.096 -4.000 S
(u) 6.758 -4.000 S
(r) 14.544 -4.000 S
(e) 20.758 -4.000 S
(s) 26.972 -4.000 S
( ) 32.420 -4.000 S
(o) 35.920 -4.000 S
(n) 42.920 -4.000 S
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(P) -60.500 11.000 S
(r) -51.948 11.000 S
(o) -45.734 11.000 S
(c) -38.734 11.000 S
(e) -32.520 11.000 S
(s) -26.306 11.000 S
(s) -20.858 11.000 S
(o) -15.410 11.000 S
(r) -8.410 11.000 S
( ) -2.196 11.000 S
(0) 1.303 11.000 S
grestore
%@EndText
%@BeginText
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
0.000 0 504.000 405.000 0.000 0.000 31.000 122.320 rect
%@EndRect
gsave
466.160 519.500 T translate
0.0 rotate
1 1 scale
14.000 (_Times-Bold) fess
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(D) -60.500 -4.000 S
(a) -50.389 -4.000 S
(t) -43.389 -4.000 S
(a) -38.727 -4.000 S
( ) -31.727 -4.000 S
(s) -28.227 -4.000 S
(t) -22.779 -4.000 S
(r) -18.117 -4.000 S
(u) -11.903 -4.000 S
(c) -4.117 -4.000 S
(t) 2.096 -4.000 S
(u) 6.758 -4.000 S
(r) 14.544 -4.000 S
(e) 20.758 -4.000 S
(s) 26.972 -4.000 S
( ) 32.420 -4.000 S
(o) 35.920 -4.000 S
(n) 42.920 -4.000 S
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(P) -60.500 11.000 S
(r) -51.948 11.000 S
(o) -45.734 11.000 S
(c) -38.734 11.000 S
(e) -32.520 11.000 S
(s) -26.306 11.000 S
(s) -20.858 11.000 S
(o) -15.410 11.000 S
(r) -8.410 11.000 S
( ) -2.196 11.000 S
(1) 1.303 11.000 S
grestore
%@EndText
%@BeginText
restore
save
[ 39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron]
StandardEncoding Re-encode /_Times-Italic /Times-Italic EncodeFont

%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
0.000 0 407.000 63.000 0.000 0.000 14.000 128.025 rect
%@EndRect
gsave
127.012 414.000 T translate
0.0 rotate
1 1 scale
12.000 (_Times-Italic) plain F
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(m) -63.109 3.000 S
(y) -54.443 3.000 S
(_) -49.117 3.000 S
(n) -43.117 3.000 S
(u) -37.117 3.000 S
(m) -31.117 3.000 S
(b) -22.451 3.000 S
(e) -16.451 3.000 S
(r) -11.125 3.000 S
(_) -6.455 3.000 S
(o) -0.455 3.000 S
(f) 5.544 3.000 S
(_) 8.878 3.000 S
(v) 14.878 3.000 S
(e) 20.204 3.000 S
(r) 25.530 3.000 S
(t) 30.200 3.000 S
(i) 33.534 3.000 S
(c) 36.868 3.000 S
(e) 42.194 3.000 S
(s) 47.521 3.000 S
grestore
restore
save
gsave
127.012 414.000 T translate
0.0 rotate
1 1 scale
[ 39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron]
StandardEncoding Re-encode /_Times-Roman /Times-Roman EncodeFont

12.000 (_Times-Roman) plain F
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(:) 52.191 3.000 S
( ) 55.525 3.000 S
(2) 58.525 3.000 S
grestore
%@EndText
%@BeginText
restore
save
[ 39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron]
StandardEncoding Re-encode /_Times-Italic /Times-Italic EncodeFont

%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
0.000 0 587.000 63.000 0.000 0.000 14.000 128.025 rect
%@EndRect
gsave
127.012 594.000 T translate
0.0 rotate
1 1 scale
12.000 (_Times-Italic) plain F
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(m) -63.109 3.000 S
(y) -54.443 3.000 S
(_) -49.117 3.000 S
(n) -43.117 3.000 S
(u) -37.117 3.000 S
(m) -31.117 3.000 S
(b) -22.451 3.000 S
(e) -16.451 3.000 S
(r) -11.125 3.000 S
(_) -6.455 3.000 S
(o) -0.455 3.000 S
(f) 5.544 3.000 S
(_) 8.878 3.000 S
(v) 14.878 3.000 S
(e) 20.204 3.000 S
(r) 25.530 3.000 S
(t) 30.200 3.000 S
(i) 33.534 3.000 S
(c) 36.868 3.000 S
(e) 42.194 3.000 S
(s) 47.521 3.000 S
grestore
restore
save
gsave
127.012 594.000 T translate
0.0 rotate
1 1 scale
[ 39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron]
StandardEncoding Re-encode /_Times-Roman /Times-Roman EncodeFont

12.000 (_Times-Roman) plain F
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(:) 52.191 3.000 S
( ) 55.525 3.000 S
(3) 58.525 3.000 S
grestore
%@EndText
%@BeginText
restore
save
[ 39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron]
StandardEncoding Re-encode /_Times-Bold /Times-Bold EncodeFont

%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
0.000 0 43.000 58.000 0.000 0.000 16.000 133.013 rect
%@EndRect
gsave
124.506 51.000 T translate
0.0 rotate
1 1 scale
14.000 (_Times-Bold) plain F
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(T) -66.500 4.000 S
(h) -57.162 4.000 S
(e) -49.375 4.000 S
( ) -43.162 4.000 S
(p) -39.662 4.000 S
(a) -31.875 4.000 S
(r) -24.875 4.000 S
(t) -18.662 4.000 S
(i) -14.000 4.000 S
(t) -10.110 4.000 S
(i) -5.448 4.000 S
(o) -1.558 4.000 S
(n) 5.441 4.000 S
(e) 13.227 4.000 S
(d) 19.441 4.000 S
( ) 27.227 4.000 S
(g) 30.727 4.000 S
(r) 37.727 4.000 S
(a) 43.941 4.000 S
(p) 50.941 4.000 S
(h) 58.727 4.000 S
grestore
%@EndText
%@BeginText
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
0.000 0 43.000 301.000 0.000 0.000 16.000 120.162 rect
%@EndRect
gsave
361.081 51.000 T translate
0.0 rotate
1 1 scale
14.000 (_Times-Bold) fess
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(T) -59.500 4.000 S
(h) -50.162 4.000 S
(e) -42.375 4.000 S
( ) -36.162 4.000 S
%@BeginText
restore
save
[ 39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron]
StandardEncoding Re-encode /_Times-BoldItalic /Times-BoldItalic EncodeFont

%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
0.000 0 43.000 301.000 0.000 0.000 16.000 120.162 rect
%@EndRect
gsave
361.081 51.000 T translate
0.0 rotate
1 1 scale
14.000 (_Times-BoldItalic) plain F
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(i) -32.662 4.000 S
(d) -28.772 4.000 S
grestore
restore
save
gsave
361.081 51.000 T translate
0.0 rotate
1 1 scale
[ 39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron]
StandardEncoding Re-encode /_Times-Bold /Times-Bold EncodeFont

14.000 (_Times-Bold) plain F
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

( ) -21.772 4.000 S
(d) -18.272 4.000 S
(a) -10.486 4.000 S
(t) -3.486 4.000 S
(a) 1.175 4.000 S
( ) 8.175 4.000 S
(s) 11.675 4.000 S
(t) 17.124 4.000 S
(r) 21.786 4.000 S
(u) 28.000 4.000 S
(t) 35.786 4.000 S
(u) 40.448 4.000 S
(r) 48.234 4.000 S
(e) 54.448 4.000 S
grestore
%@EndText
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 0.000 setcmykcolor end} {1.000 1.000 1.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
1.000 0 132.000 344.000 0.000 0.000 18.000 36.000 rect
%@EndRect
%@BeginText
restore
save
[ 39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron]
StandardEncoding Re-encode /_Times-Roman /Times-Roman EncodeFont

%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
0.000 0 135.000 351.000 0.000 0.000 14.000 24.000 rect
%@EndRect
gsave
363.000 142.000 T translate
0.0 rotate
1 1 scale
12.000 (_Times-Roman) plain F
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(4) -11.500 3.000 S
( ) -5.500 3.000 S
(0) -2.500 3.000 S
( ) 3.500 3.000 S
(1) 6.500 3.000 S
grestore
%@EndText
%@BeginText
restore
save
[ 39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron]
StandardEncoding Re-encode /_Times-Italic /Times-Italic EncodeFont

%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
0.000 1.570 105.798 338.201 0.000 0.000 14.000 25.596 rect
%@EndRect
gsave
351.000 112.798 T translate
-90.006  rotate
1 1 scale
12.000 (_Times-Italic) plain F
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(l) -12.271 3.000 S
(a) -8.937 3.000 S
(b) -2.937 3.000 S
(e) 3.062 3.000 S
(l) 8.389 3.000 S
grestore
%@EndText
%@BeginText
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
0.000 1.570 104.891 349.108 0.000 0.000 14.000 31.783 rect
%@EndRect
gsave
365.000 111.891 T translate
-90.006  rotate
1 1 scale
12.000 (_Times-Italic) fess
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(o) -15.183 3.000 S
(w) -9.183 3.000 S
(n) -1.179 3.000 S
(e) 4.820 3.000 S
(r) 10.146 3.000 S
grestore
%@EndText
%@BeginText
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
0.000 1.570 93.795 350.204 0.000 0.000 14.000 55.590 rect
%@EndRect
gsave
378.000 100.795 T translate
-90.006  rotate
1 1 scale
12.000 (_Times-Italic) fess
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(l) -27.268 3.000 S
(o) -23.934 3.000 S
(c) -17.934 3.000 S
(a) -12.608 3.000 S
(l) -6.608 3.000 S
(_) -3.274 3.000 S
(l) 2.725 3.000 S
(a) 6.059 3.000 S
(b) 12.059 3.000 S
(e) 18.059 3.000 S
(l) 23.386 3.000 S
grestore
%@EndText
restore
end
%%EndDocument

 endTexFig
 309 2131 a Fl(Figure)16 b(1:)21 b(Lo)q(cal)d(data)f(structures)f(for)g
(a)h(distributed)f(sparse)g(graph.)963 2795 y(4)p eop
%%Page: 5 5
5 4 bop 73 50 a Fl(W)l(e)11 b(w)o(ould)h(lik)o(e)d(to)j(o\013er)g(t)o
(w)o(o)f(hin)o(ts.)19 b(First,)12 b(it)f(is)g(lik)o(ely)e(that)j(y)o
(ou)f(will)f(need)h(to)h(p)q(erform)f(some)f(setup)0
110 y(op)q(erations)15 b(b)q(efore)f(the)g(subroutine)g(is)g(\014rst)h
(called.)k(F)l(or)14 b(example,)e(y)o(ou)i(migh)o(t)e(need)i(to)g
(broadcast)i(to)0 170 y(ev)o(ery)e(pro)q(cessor)i(the)f(n)o(um)o(b)q
(er)e(of)j(ro)o(ws)f(stored)h(on)f(ev)o(ery)f(other)h(pro)q(cessor.)22
b(\(Initially)13 b(that)j(informa-)0 230 y(tion)e(is)g(stored)h(only)f
(on)h(the)f(pro)q(cessor)i(whose)f(rank)f(is)g(zero)g(in)g(a)h(v)o
(ector)f(called)f Fc(vertic)n(es)p 1691 230 15 2 v 19
w(p)n(er)p 1776 230 V 17 w(owner)p Fl(.\))0 291 y(Second,)21
b(remem)n(b)q(er)c(that)k(if,)f(after)h(y)o(ou)f(collect)e(them,)i(the)
g(elemen)o(t)o(s)e(of)j Ff(x)e Fl(are)i(not)f(in)g(increasing)0
351 y(global)d(index)e(order,)h(then)g(y)o(ou)g(need)g(to)h(do)f
(something)g(to)g(\014nd)h(sp)q(eci\014c)e(neigh)o(b)q(ors.)73
411 y(Y)l(ou)h(will)g(need)f(to)i(use)f(the)g(follo)o(wing)g(MPI)g
(subroutines:)73 492 y Fk(\017)24 b Fd(MPI)p 211 492
V 18 w(Allgatherv)p Fl(.)e(The)17 b(protot)o(yp)q(e)f(for)h(the)f
(subroutine)g(is)122 591 y Fd(int)g(MPI)p 281 591 V 18
w(Allgatherv\()p Fl(v)o(oid*)i(sendbuf,)e(in)o(t)f(sendcoun)o(t,)h(MPI)
p 1262 591 V 17 w(Datat)o(yp)q(e)h(sendt)o(yp)q(e,)522
651 y(v)o(oid*)f(recvbuf,)f(in)o(t)g(*recv)o(coun)o(ts,)g(in)o(t)h
(*displs,)522 711 y(MPI)p 621 711 V 17 w(Datat)o(yp)q(e)g(recvt)o(yp)q
(e,)f(MPI)p 1160 711 V 17 w(Comm)f(comm\).)122 810 y(This)i(subroutine)
g(collects)f(a)h(section)g(of)g(a)h(v)o(ector)e(from)g(ev)o(ery)f(pro)q
(cessor)j(and)g(broadcasts)g(the)122 870 y(en)o(tire)g(v)o(ector)g(to)i
(all)f(the)g(pro)q(cessors.)29 b(Eac)o(h)19 b(pro)q(cessor)g(sends)g(a)
g(section)f(whic)o(h)g(is)g(stored)h(at)122 930 y(address)k
Fc(sendbuf)g Fl(and)g(con)o(tains)f(an)h(arra)o(y)f(of)g
Fc(sendc)n(ount)i Fl(elemen)o(ts)19 b(of)k(datat)o(yp)q(e)f
Fc(sendtyp)n(e)p Fl(.)122 990 y(V)l(alid)d(datat)o(yp)q(es)i(include)e
(MPI)p 752 990 V 17 w(INT,)g(MPI)p 988 990 V 17 w(DOUBLE,)h(and)h(so)g
(on.)34 b(A)20 b(useful)g(datat)o(yp)q(e)g(is)122 1051
y(MPI)p 221 1051 V 17 w(BYTE,)14 b(whic)o(h)h(can)h(b)q(e)f(used)h
(with)f(an)h(appropriate)g(v)m(alue)f(of)g Fc(c)n(ount)h
Fl(to)g(send)g(structures.)122 1111 y(The)d(en)o(tire)e(v)o(ector)g(is)
i(stored)g(in)f(address)h Fc(r)n(e)n(cvbuf)p Fl(.)20
b(An)13 b(imp)q(ortan)o(t)e(asp)q(ect)i(of)g(this)f(subroutine)h(is)122
1171 y(that)j(ev)o(ery)f(pro)q(cessor)i(m)o(ust)d(kno)o(w)i(ho)o(w)h
(man)o(y)d(elemen)o(ts)g(eac)o(h)h(other)h(pro)q(cessor)h(con)o
(tributes,)122 1231 y(and)f(where)g(in)f(the)g(v)o(ector)g(eac)o(h)g
(section)g(b)q(elongs.)22 b(The)16 b(arra)o(ys)g Fc(r)n(e)n(cvc)n
(ounts)g Fl(and)g Fc(displs)p Fl(,)g(whic)o(h)122 1291
y(m)o(ust)k(b)q(e)h(initialized)e(and)j(iden)o(tical)d(on)j(all)e(the)h
(pro)q(cessors,)j(m)o(ust)19 b(con)o(tain)i(the)g(n)o(um)o(b)q(er)f(of)
122 1352 y(elemen)o(ts)15 b(eac)o(h)j(pro)q(cessor)g(con)o(tributes,)g
(and)g(the)g(displacemen)o(t)d(in)j(recvbuf)f(that)h(marks)f(the)122
1412 y(b)q(eginning)g(of)h(eac)o(h)f(section.)23 b(These)17
b(arra)o(ys)h(are)f(of)g(size)g Fc(npr)n(o)n(cs)p Fl(.)23
b Fc(Comm)16 b Fl(sp)q(eci\014es)h(a)h(comm)o(u-)122
1472 y(nicator,)e(whic)o(h)f(in)h(this)g(program)g(should)h(b)q(e)g
(set)f(to)g(MPI)p 1243 1472 V 17 w(COMM)p 1423 1472 V
17 w(W)o(ORLD.)73 1567 y Fk(\017)24 b Fd(MPI)p 211 1567
V 18 w(Bcast)p Fl(.)37 b(This)21 b(subroutine)h(sends)g(information)e
(from)h(one)g(pro)q(cessors)i(to)f(all)f(the)g(other)122
1627 y(pro)q(cessors.)h(The)17 b(protot)o(yp)q(e)f(for)h(the)f
(subroutine)g(is)122 1726 y Fd(int)g(MPI)p 281 1726 V
18 w(Bcast\()p Fl(v)o(oid*)g(bu\013er,)g(in)o(t)g(coun)o(t,)f(MPI)p
1033 1726 V 18 w(Datat)o(yp)q(e)h(datat)o(yp)q(e,)g(in)o(t)g(ro)q(ot,)
429 1786 y(MPI)p 528 1786 V 17 w(Comm)e(comm\).)122 1884
y(The)20 b(subroutine)g(sends)h(the)f(bu\013er)g(p)q(oin)o(ted)g(to)h
(b)o(y)e Fc(buf)i Fl(in)f(pro)q(cessor)h Fc(r)n(o)n(ot)e
Fl(to)h(all)g(the)g(other)122 1945 y(pro)q(cessors.)h(The)13
b(bu\013er)h(is)f(assumed)f(to)i(con)o(tain)e(an)i(arra)o(y)f(of)h
Fc(c)n(ount)f Fl(ob)s(jects)g(of)g(t)o(yp)q(e)g Fc(datatyp)n(e)p
Fl(.)122 2005 y Fc(Comm)j Fl(should)g(b)q(e)h(set)f(to)h(MPI)p
734 2005 V 17 w(COMM)p 914 2005 V 17 w(W)o(ORLD.)73 2086
y(Both)d Fd(M)p Fl(PI)p 288 2086 V 18 w(Bcast)f(and)i
Fd(M)p Fl(PI)p 624 2086 V 17 w(Allgathrv)e(are)h(collectiv)o(e)d(comm)o
(unication)g(routines,)j(whic)o(h)f(means)0 2146 y(that)k(nothing)g
(happ)q(ens)g(un)o(til)e Fc(al)r(l)23 b Fl(the)16 b(pro)q(cessors)h
(reac)o(h)f(and)h(execute)e(the)h(call)f(to)i(the)f(routine!)73
2207 y(Y)l(ou)23 b(can)h(compile)c(the)j(program)g(b)o(y)g(t)o(yping)g
Fh(make)p Fl(.)40 b(Y)l(ou)23 b(can)h(run)f(the)g(program)g(b)o(y)g(t)o
(yping)0 2267 y Fh(poe)i(solver)p Fl(,)14 b(and)j(y)o(ou)g(can)g(pass)h
(run)o(time)c(argumen)o(ts)i(to)i(the)e(program)h(b)o(y)f(passing)i
(them)d(to)j Fh(poe)p Fl(.)0 2327 y(F)l(or)23 b(example,)g
Fh(poe)h(solver)f(PARTITION)p 826 2327 16 2 v 16 w(RANDOM)e
Fl(will)h(run)h(the)g(program)g(with)g(a)g(random)g(data)0
2387 y(partitioning.)73 2447 y(Do)q(es)f(y)o(our)e(program)h(sp)q(eed)g
(up)g(as)g(the)g(n)o(um)o(b)q(er)e(of)i(pro)q(cessors)h(is)f
(increased?)34 b(The)21 b(program)0 2507 y(runs)c(b)o(y)e(default)h(on)
h(4)g(pro)q(cessors.)22 b(T)l(o)17 b(c)o(hange)f(this)g(to)h
Ff(n)p Fl(,)f(t)o(yp)q(e)0 2589 y Fh(procs)24 b(n)0 2670
y Fl(b)q(efore)16 b(the)g Fh(poe)f Fl(command.)20 b(Y)l(ou)c(can)g(use)
h(1,)f(2,)g(4,)g(or)h(8)f(pro)q(cessors.)963 2795 y(5)p
eop
%%Page: 6 6
6 5 bop 0 50 a Fi(3)81 b(Matrix-V)-7 b(ector)18 b(Multiplication)d
(with)j(P)n(oin)n(t-to-P)n(oin)n(t)f(Com-)121 141 y(m)n(unication)0
251 y Fl(A)d(more)f(sophisticated)i(w)o(a)o(y)f(to)g(impleme)o(n)o(t)d
(the)k(matrix-v)o(ector)d(m)o(ultipli)o(cation)g(subroutine)i(is)h
(using)0 311 y(the)k(p)q(oin)o(t-to-p)q(oin)o(t)g(MPI)g(comm)o(uni)o
(cation)d(subroutines)k Fd(MPI)p 1213 311 15 2 v 18 w(Send)e
Fl(and)i Fd(MPI)p 1532 311 V 18 w(Recv)p Fl(.)29 b(This)19
b(v)o(ersion)0 371 y(of)h(the)g(algorithm)f(should)i(b)q(e)f(implem)o
(en)o(te)o(d)e(in)h(the)h(subroutine)h Fd(multiply)p
1454 371 V 18 w(b)o(y)p 1518 371 V 18 w(A)p 1568 371
V 17 w(sendrecv)p Fl(.)32 b(This)20 b(is)0 431 y(a)f(more)e
(sophisticated)i(algorithm,)f(but)h(not)g(necessarily)e(more)h
(complicated.)26 b(Do)20 b(it)e(\014rst)h(without)0 491
y(trying)c(for)g(message)g(v)o(ectorization,)e(eliminating)g(redundan)o
(t)i(comm)o(unic)o(ation,)e(or)i(reindexing.)20 b(Just)0
552 y(send)13 b(a)g(one)h(item)c(message)i(for)i(eac)o(h)e(edge)h(that)
g(connects)g(to)g(a)h(neigh)o(b)q(or)f(on)g(another)h(pro)q(cessor.)21
b(In)13 b(a)0 612 y(sc)o(heme)e(lik)o(e)g(this,)i(a)h(pro)q(cessor)g
(will)e(do)i(a)g(receiv)o(e)c(for)k(ev)o(ery)e(send,)h(b)q(ecause)g
(the)g(graph)i(is)e(undirected.)73 672 y(T)l(o)g(use)f(the)g(new)g
(matrix-v)o(ector)d(m)o(ultiplication)g(subroutine,)k(y)o(ou)f(need)g
(to)g(sp)q(ecify)f(the)h(argumen)o(t)0 732 y(MA)l(TVEC)p
221 732 V 17 w(SENDRECV)k(to)h Fh(poe)24 b(solver)p Fl(.)73
792 y(Ho)o(w)16 b(do)q(es)h(this)f(v)o(ersion)g(compare)f(in)h(p)q
(erformance)f(to)i(the)f(allgatherv)g(v)o(ersion?)73
853 y(Y)l(ou)g(will)g(need)f(to)i(use)f(the)g(follo)o(wing)g(MPI)g
(subroutines:)73 954 y Fk(\017)24 b Fd(MPI)p 211 954
V 18 w(Send)p Fl(.)d(The)16 b(protot)o(yp)q(e)h(for)f(the)g(subroutine)
h(is)122 1076 y Fd(int)f(MPI)p 281 1076 V 18 w(Send\()p
Fl(v)o(oid*)g(buf,)g(in)o(t)g(coun)o(t,)f(MPI)p 964 1076
V 17 w(Datat)o(yp)q(e)i(datat)o(yp)q(e,)414 1137 y(in)o(t)f(dest,)g(in)
o(t)f(tag,)i(MPI)p 877 1137 V 17 w(Comm)d(comm\).)122
1259 y(The)21 b(subroutine)h(sends)g(the)f(bu\013er)h(p)q(oin)o(ted)g
(to)g(b)o(y)f Fc(buf)h Fl(to)g(pro)q(cessor)g Fc(dest)p
Fl(.)38 b(The)21 b(bu\013er)h(is)122 1319 y(assumed)f(to)g(con)o(tain)g
(an)h(arra)o(y)g(of)f Fc(c)n(ount)h Fl(ob)s(jects)f(of)h(t)o(yp)q(e)e
Fc(datatyp)n(e)p Fl(.)36 b Fc(T)l(ag)22 b Fl(is)f(used)g(b)o(y)g(the)
122 1379 y(receiving)d(pro)q(cessor,)j(whic)o(h)e(can)h(c)o(ho)q(ose)g
(to)g(receiv)o(e)d(messages)i(with)g(sp)q(eci\014c)g(tags.)33
b Fc(Comm)122 1440 y Fl(should)17 b(b)q(e)f(set)g(to)h(MPI)p
578 1440 V 17 w(COMM)p 758 1440 V 17 w(W)o(ORLD.)73 1541
y Fk(\017)24 b Fd(MPI)p 211 1541 V 18 w(Recv)p Fl(.)d(The)c(protot)o
(yp)q(e)f(for)h(the)f(subroutine)g(is)122 1664 y Fd(int)g(MPI)p
281 1664 V 18 w(Recv\()p Fl(v)o(oid*)h(buf,)e(in)o(t)h(coun)o(t,)g(MPI)
p 963 1664 V 17 w(Datat)o(yp)q(e)g(datat)o(yp)q(e,)412
1724 y(in)o(t)g(source,)g(in)o(t)f(tag,)i(MPI)p 921 1724
V 17 w(Comm)d(comm,MPI)p 1334 1724 V 14 w(Status)j(*status\).)122
1846 y(The)h(subroutine)h(receiv)o(es)e(one)h(message)g(in)o(to)g(the)h
(bu\013er)f(p)q(oin)o(ted)h(to)g(b)o(y)f Fc(buf)p Fl(.)28
b(The)19 b(message)122 1906 y(m)o(ust)d(b)q(e)h(from)f(pro)q(cessor)i
Fc(sour)n(c)n(e)p Fl(,)f(unless)g Fc(sour)n(c)n(e)f Fl(is)h(MPI)p
1246 1906 V 18 w(ANY)p 1375 1906 V 16 w(SOUR)o(CE,)f(in)h(whic)o(h)f
(case)i(a)122 1966 y(message)13 b(from)f(an)o(y)h(pro)q(cessor)i(can)f
(b)q(e)f(receiv)o(ed.)18 b(The)c(message)e(m)o(ust)h(carry)g(the)g(sp)q
(eci\014ed)g Fc(tag)p Fl(,)122 2027 y(unless)18 b Fc(tag)g
Fl(is)g(MPI)p 499 2027 V 17 w(ANY)p 627 2027 V 17 w(T)l(A)o(G,)f(in)h
(whic)o(h)f(case)h(a)g(message)g(with)g(an)o(y)g(tag)g(can)h(b)q(e)f
(receiv)o(ed.)122 2087 y(The)f(meaning)e(of)j Fc(c)n(ount)f
Fl(and)g Fc(datatyp)n(e)g Fl(is)f(iden)o(tical)f(to)i(their)g(meaning)e
(in)i Fd(MPI)p 1660 2087 V 18 w(Send)p Fl(.)23 b Fc(Comm)122
2147 y Fl(should)h(b)q(e)g(set)g(to)h(MPI)p 609 2147
V 17 w(COMM)p 789 2147 V 17 w(W)o(ORLD.)f Fc(Status)g
Fl(con)o(tains)g(t)o(w)o(o)g(\014elds,)h(MPI)p 1731 2147
V 17 w(SOUR)o(CE)122 2207 y(and)c(MPI)p 320 2207 V 17
w(T)l(A)o(G)e(that)i(store)f(the)g(source)g(and)g(tag)h(of)g(the)e
(message.)32 b(This)20 b(ma)o(y)f(b)q(e)h(useful)g(if)122
2267 y(MPI)p 221 2267 V 17 w(ANY)p 349 2267 V 16 w(SOUR)o(CE)12
b(or)h(MPI)p 734 2267 V 17 w(ANY)p 862 2267 V 16 w(T)l(A)o(G)f(are)g
(sp)q(eci\014ed.)20 b(Y)l(ou)12 b(ma)o(y)f(retriev)o(e)f(them)h(b)o(y)h
(using)122 2328 y(the)i(con)o(ten)o(ts)f(of)i Fc(status.MPI)p
685 2328 V 18 w(SOUR)o(CE)f Fl(and)h Fc(status.MPI)p
1247 2328 V 17 w(T)l(A)o(G)p Fl(.)f(\(Our)g(implem)o(en)o(tation)d(do)q
(es)122 2388 y(not)17 b(use)f(the)g(return)g(status.\))73
2489 y Fk(\017)24 b Fd(MPI)p 211 2489 V 18 w(Ip)o(rob)q(e)p
Fl(.)31 b(This)20 b(subroutine)f(is)h(not)f(absolutely)h(necessary)l(,)
f(but)h(y)o(ou)f(ma)o(y)f(\014nd)i(it)f(useful.)122 2550
y(It)i(c)o(hec)o(ks)g(whether)g(a)h(message)g(is)f(a)o(v)m(ailable.)37
b(If)22 b(y)o(ou)g(call)f Fd(MPI)p 1396 2550 V 18 w(Recv)h
Fl(and)g(no)g(appropriate)122 2610 y(message)17 b(is)g(a)o(v)m
(ailable,)f(y)o(our)h(program)h(will)e(blo)q(c)o(k)h(un)o(til)f(one)i
(arriv)o(es)e(\(on)i(the)f(pro)q(cessor)i(that)122 2670
y(issued)d(the)g(call\).)k(The)d(protot)o(yp)q(e)f(for)h(the)f
(subroutine)g(is)963 2795 y(6)p eop
%%Page: 7 7
7 6 bop 122 50 a Fd(int)16 b(MPI)p 281 50 15 2 v 18 w(Ip)o(rob)q(e\()p
Fl(in)o(t)g(source,)g(in)o(t)f(tag,)i(MPI)p 950 50 V
17 w(Comm)d(comm,i)o(n)o(t)f(*\015ag,)441 110 y(MPI)p
540 110 V 17 w(Status)k(*status\).)122 231 y(The)22 b(subroutine)f
(sets)h Fc(\015ag)g Fl(to)g(TR)o(UE)f(if)g(a)h(message)f(with)h
(appropriate)g(tag)g(and)h(source)e(is)122 292 y(a)o(v)m(ailable.)i(If)
17 b(it)f(is,)h(then)g Fc(status)g Fl(has)h(the)f(same)f(information)g
(ab)q(out)i(the)f(w)o(aiting)g(message)f(as)122 352 y(it)g(w)o(ould)g
(if)g(that)g(message)g(w)o(ere)f(receiv)o(ed.)0 518 y
Fi(4)81 b(P)n(erformance)27 b(Studies)e(of)i(P)n(arallel)f(CG)0
628 y Fl(Compare)20 b(the)g(p)q(erformance)f(of)i(y)o(our)f(t)o(w)o(o)g
(matrix-v)o(ector)e(m)o(ultipli)o(cation)g(algorithms.)32
b(Use)20 b(b)q(oth)0 688 y(the)e(data)h(partition)g(from)e(the)h
(\014le)g(and)h(the)f(random)g(data)h(partition.)28 b(Whic)o(h)17
b(com)o(bination)g(is)h(the)0 748 y(fastest?)27 b(Ho)o(w)18
b(are)g(they)f(a\013ected)h(b)o(y)g(increasing)f(or)i(decreasing)e(the)
h(n)o(um)o(b)q(er)e(of)j(pro)q(cessors?)28 b(Is)17 b(it)0
808 y(w)o(orth)o(while)g(to)h(partition)f(the)h(v)o(ectors)f(so)h(as)g
(to)g(maximi)o(ze)c(data)19 b(lo)q(calit)o(y?)25 b(Whic)o(h)16
b(v)o(ersion)h(is)h(b)q(est)0 868 y(on)f(random)f(data)h(partitions?)22
b(Can)17 b(y)o(ou)f(explain)f(this?)73 929 y(The)20 b(executable)f
Fh(solver)f Fl(has)j(the)f(same)f(options)h(as)h(y)o(our)f(co)q(de.)33
b(It)20 b(con)o(tains)g(one)g(v)o(ersion)g(of)0 989 y(the)h(matrix-v)o
(ector)d(m)o(ultiplic)o(ation)h(co)q(de)i(that)g(pulls)g(out)g(all)f
(the)h(stops:)32 b(message)20 b(v)o(ectorization,)0 1049
y(redundan)o(t)c(comm)o(unication)d(remo)o(v)m(al,)i(and)h(lo)q(cal)h
(reindexing.)73 1109 y(T)l(o)g(use)f(this)g(v)o(ersion,)f(t)o(yp)q(e)0
1210 y Fh(poe)25 b(solver)e(MATVEC_SEN)o(DRE)o(CV)o(_VE)o(CTO)o(RIZ)o
(E_)o(VER)o(TIC)o(ES)0 1311 y Fl(Y)l(ou)16 b(can)h(lo)q(ok)f(at)h(the)f
(co)q(de)g(in)42 b Fh(edelman/te)o(ng/)o(so)o(lve)o(r.c)o
Fl(.)18 b(Ho)o(w)f(fast)f(is)g(it?)73 1371 y(Note)e(that)h(the)f(n)o
(um)o(b)q(er)f(of)i(\015oating)g(p)q(oin)o(t)g(op)q(erations)h(p)q(er)e
(iteration)g(of)h(our)g(algorithm)e(is)i(12)p Ff(n)7
b Fl(+)0 1431 y(2)p Ff(m)p Fl(,)15 b(where)g Ff(n)f Fl(=)f(4)p
Ff(;)8 b Fl(253)17 b(is)e(the)f(n)o(um)o(b)q(er)g(of)h(equations)g(and)
h Ff(m)e Fl(=)f(12)p Ff(;)8 b Fl(289)17 b(is)e(the)g(n)o(um)o(b)q(er)e
(of)i(nonzeros)0 1491 y(in)h Ff(A)p Fl(.)21 b(Ho)o(w)16
b(fast)h(is)f(this)g(co)q(de)g(running,)g(in)g(mega\015ops?)73
1552 y(Is)g(this)g(problem)f(big)h(enough)h(for)f(the)g(SP2?)23
b(Do)q(es)17 b(the)f(co)q(de)g(run)h(e\016cien)o(tly)c(on)k(one)f(pro)q
(cessor?)0 1612 y(\(The)g(p)q(eak)h(sp)q(eed)f(of)h(an)f(SP2)h(pro)q
(cessor)h(is)e(o)o(v)o(er)f(200)i(M\015ops\).)0 1778
y Fi(5)81 b(Sp)r(ectral)27 b(P)n(artitioning)0 1888 y
Fl(T)l(o)19 b(use)f(the)g(sp)q(ectral)g(partitioning)h(approac)o(h,)g
(w)o(e)f(need)f(to)i(compute)e(an)i(\\appro)o(ximation")f(of)g(the)0
1948 y(eigen)o(v)o(ector)e(of)i(the)f(Laplacian)i(matrix)d(of)i(the)f
(graph)i(that)f(has)g(the)g(smallest)e(non-zero)i(eigen)o(v)m(alue)0
2008 y Ff(\025)p Fl(.)24 b(Recall)15 b(the)i(Laplacian)h(matrix)d
Ff(L)i Fl(of)g(an)h(undirected)e(graph)i(is)e(an)i Ff(n)f
Fl(b)o(y)f Ff(n)h Fl(matrix)f(suc)o(h)g(that)i(for)0
2068 y(ev)o(ery)e(edge)h(\()p Ff(i;)8 b(j)s Fl(\))17
b(in)g(the)g(graph,)i(the)e(corresp)q(onding)h(elemen)o(t)d
Ff(L)1270 2075 y Fe(ij)1316 2068 y Fl(=)h Fk(\000)p Fl(1.)25
b(The)17 b(other)h(o\013-diagonal)0 2128 y(elemen)o(ts)d(of)k
Ff(A)f Fl(are)g(all)g(zero.)26 b(The)19 b(diagonal)g(en)o(tries)e(of)h
Ff(L)h Fl(are)f(the)g(degrees)g(of)g(the)g(v)o(ertices)f(of)h(the)0
2188 y(graph.)73 2249 y(If)f Ff(u)f Fl(=)f(\()p Ff(u)267
2256 y Fb(1)287 2249 y Ff(;)8 b(:::;)g(u)401 2256 y Fe(n)422
2249 y Fl(\))18 b(is)f(the)g(eigen)o(v)o(ector)f(of)h
Ff(L)h Fl(whose)g(eigen)o(v)m(alue)e(is)h(equal)g(to)h
Ff(\025)p Fl(,)g(then)1748 2215 y Fa(P)1792 2259 y Fe(i)1814
2249 y Ff(u)1842 2256 y Fe(i)1872 2249 y Fl(=)e(0)0 2309
y(and)f Ff(Lu)f Fl(=)f Ff(\025u)p Fl(.)21 b(One)14 b(w)o(a)o(y)g(to)h
(appro)o(ximate)d Ff(u)i Fl(is)g(to)h(use)f(the)g(p)q(o)o(w)o(er)g
(metho)q(d.)20 b(Let)14 b Ff(B)j Fl(=)d(2)7 b Fk(\003)g
Fl(\001)g Fk(\003)g Ff(I)j Fk(\000)d Ff(L)p Fl(,)0 2369
y(where)12 b(\001)g(is)f(the)h(largest)h(degree)e(of)i(the)f(graph.)20
b(Then,)13 b Ff(B)s(u)g Fl(=)h(\(2\001)s Fk(\000)s Ff(\025)p
Fl(\))p Ff(u)p Fl(.)19 b(So)13 b Ff(u)e Fl(is)h(still)f(an)i(eigen)o(v)
o(ector)0 2429 y(of)k Ff(B)s Fl(.)j(In)c(fact)g(the)g(largest)h(eigen)o
(v)m(alue)e(of)i Ff(B)h Fl(is)e(2\001)h(and)g Ff(\025)f
Fl(is)g(the)g(second)h(largest)f(eigen)o(v)m(alue)f(of)i
Ff(B)s Fl(.)73 2489 y(Supp)q(ose)e Ff(v)h Fl(=)d(\()p
Ff(v)396 2496 y Fb(1)416 2489 y Ff(;)8 b(:::;)g(v)526
2496 y Fe(n)547 2489 y Fl(\))14 b(is)g(a)h(v)o(ector)e(that)h(is)g(p)q
(erp)q(endicular)g(to)h(the)f(all-1's)g(v)o(ector,)f(i.e.,)1794
2456 y Fa(P)1838 2500 y Fe(i)1861 2489 y Ff(v)1885 2496
y Fe(i)1912 2489 y Fl(=)0 2550 y(0.)34 b(Then)20 b Ff(B)s(v)i
Fl(is)e(also)h(p)q(erp)q(endicular)f(to)g(the)h(all-1's)f(v)o(ector.)32
b(Hence,)20 b(w)o(e)g(can)g(appro)o(ximate)f Ff(u)i Fl(b)o(y)0
2610 y(compute)16 b Ff(B)239 2592 y Fe(k)259 2610 y Ff(v)r
Fl(,)h(for)g(a)g(randomly)f(c)o(hosen)h(or)h(a)f(carefully)f(c)o(hosen)
g(v)o(ector)h Ff(v)r Fl(.)22 b(W)l(e)17 b(kno)o(w)g(that)h(when)f
Ff(k)0 2670 y Fl(go)q(es)g(to)g(in\014nit)o(y)l(,)d(then)j
Ff(B)496 2652 y Fe(k)516 2670 y Ff(v)h Fl(is)e(b)q(ecoming)f(parallel)h
(to)g Ff(u)p Fl(,)g(and)h(hence)e(w)o(e)h(get)g(an)h(appro)o(ximation.)
963 2795 y(7)p eop
%%Page: 8 8
8 7 bop 73 50 a Fl(In)20 b(our)g(assignmen)o(t,)f(w)o(e)g(will)g(use)h
(this)f(p)q(o)o(w)o(er)h(metho)q(d)f(to)h(compute)f(an)h(appro)o
(ximation)f(to)h Ff(u)p Fl(.)0 110 y(Clearly)l(,)15 b(w)o(e)h(will)f
(use)h(y)o(our)g(matrix-v)o(ector)e(m)o(ultiplic)o(ation)g(subroution.)
73 170 y(When)25 b(a)f(pro)q(cessor)i(computes)d(its)h(elemen)o(ts)d
(of)k Ff(B)s(x)p Fl(,)g(it)f(m)o(ust)f(m)o(ultiply)e(eac)o(h)j(of)h
(its)f(v)o(ector)0 230 y(elemen)o(ts)c Ff(x)234 237 y
Fe(i)270 230 y Fl(b)o(y)i(the)g(corresp)q(onding)h(diagonal)h(elemen)o
(t)19 b Ff(B)1178 237 y Fe(i;i)1236 230 y Fl(and)k(then)g(add)g
Ff(x)1584 237 y Fe(j)1624 230 y Fl(for)g(eac)o(h)f(of)g(the)0
291 y(neigh)o(b)q(oring)17 b(v)o(ertices)d Ff(j)s Fl(,)i(that)h(is)f
(for)h(eac)o(h)e Ff(j)20 b Fl(suc)o(h)c(that)h Ff(L)1123
298 y Fe(i;j)1177 291 y Fl(=)d Fk(\000)p Fl(1.)22 b(Some)15
b(of)h(these)g(neigh)o(b)q(oring)h Ff(x)1932 298 y Fe(j)0
351 y Fl(v)m(alues)f(ma)o(y)f(b)q(elong)i(to)f(other)h(pro)q(cessors.)
73 411 y(Lik)o(e)k(the)g(CG)h(part)g(of)f(the)g(assignmen)o(t,)h(w)o(e)
f(pro)o(vide)f(sev)o(eral)h(initialization)e(functions)j(whic)o(h)0
471 y(assign)15 b(v)m(alues)f(to)g Ff(D)q Fl(,)h(the)e(diagonal)i(en)o
(tries,)e Ff(x)p Fl(,)g(the)h(initial)e(v)o(ector.)20
b(The)14 b(\014nal)g(program)f(will)g(sa)o(v)o(e)g(the)0
531 y(appro)o(ximate)18 b(eigen)o(v)o(ector)g(in)h(a)h(\014le)f(called)
g(\\\014edler.airfoil1".)30 b(Y)l(ou)20 b(can)g(then)f(start)h(y)o(our)
g(matlab)0 592 y(and)d(t)o(yp)q(e)f(\\plot)p 316 592
15 2 v 18 w(sp)q(ect;")g(to)g(see)g(the)g(plot)g(of)h(y)o(our)f(sp)q
(ectral)g(bisection.)73 652 y(The)g(\014le)g(here)g(is)g
Fh(spectral)p 618 652 16 2 v 15 w(incomplete.)o(c)p Fl(.)0
818 y Fi(6)81 b(Mak)n(e\014le)0 928 y Fl(Please)16 b(c)o(hange)g(the)g
(\014le)g(names)f(in)h(the)g(Mak)o(e\014le)f(to)h(b)q(e)h(consisten)o
(t)f(with)g(y)o(our)g(program.)963 2795 y(8)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
